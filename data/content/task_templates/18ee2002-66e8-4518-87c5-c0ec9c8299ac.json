{
  "id": "18ee2002-66e8-4518-87c5-c0ec9c8299ac",
  "name": "FreeBSD b64encode Shebang in CLI",
  "description": "Using b64decode shell scripts that have Shebang in them. This is commonly how attackers obfuscate passing and executing a shell script. Seen [here](https://www.trendmicro.com/pl_pl/research/20/i/the-evolution-of-malicious-shell-scripts.html) by TrendMicro, as well as [LinPEAS](https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS). Also a there is a great Sigma rule [here](https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_base64_shebang_cli.yml) for it. \n",
  "platforms": [
    "linux"
  ],
  "steps": [
    {
      "id": "cf6d8425-d334-4560-b074-cc8ede83c189",
      "type": "execute-command",
      "data": {
        "command": "echo #{bash_encoded} | b64decode -r | sh\necho #{dash_encoded} | b64decode -r | sh\necho #{fish_encoded} | b64decode -r | sh\necho #{sh_encoded} | b64decode -r | sh",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "0def5199-78a0-4624-87f0-aec2cf412a32",
      "name": "Check dependency 1/1",
      "description": "b64decode must be present\n",
      "type": "execute-command",
      "data": {
        "command": "which b64decode",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "0a6ccfd5-6361-4484-87d9-f981910a7b7e",
      "name": "Resolve dependency 1/1",
      "description": "b64decode must be present\n",
      "type": "execute-command",
      "data": {
        "command": "echo \"please install b64decode\"",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "371ad91e-d4a2-4123-9742-6046e8dddc87",
      "name": "Re-check dependency 1/1",
      "description": "b64decode must be present\n",
      "type": "execute-command",
      "data": {
        "command": "which b64decode",
        "command_type": "sh"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "0def5199-78a0-4624-87f0-aec2cf412a32",
      "p": "on-success",
      "o": "cf6d8425-d334-4560-b074-cc8ede83c189"
    },
    {
      "s": "0def5199-78a0-4624-87f0-aec2cf412a32",
      "p": "on-failure",
      "o": "0a6ccfd5-6361-4484-87d9-f981910a7b7e"
    },
    {
      "s": "0a6ccfd5-6361-4484-87d9-f981910a7b7e",
      "p": "on-success",
      "o": "371ad91e-d4a2-4123-9742-6046e8dddc87"
    },
    {
      "s": "371ad91e-d4a2-4123-9742-6046e8dddc87",
      "p": "on-failure",
      "o": "cf6d8425-d334-4560-b074-cc8ede83c189"
    }
  ],
  "tags": [
    "T1140"
  ],
  "input_arguments": [
    {
      "name": "bash_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Jhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    },
    {
      "name": "dash_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    },
    {
      "name": "fish_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    },
    {
      "name": "sh_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL3NoCmVjaG8gImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL0BhdG9taWNzb25hZnJpZGF5IEZUVyIK"
    }
  ]
}