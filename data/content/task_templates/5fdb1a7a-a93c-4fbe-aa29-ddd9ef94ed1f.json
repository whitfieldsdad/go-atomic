{
  "id": "5fdb1a7a-a93c-4fbe-aa29-ddd9ef94ed1f",
  "name": "Install root CA on Windows with certutil",
  "description": "Creates a root CA with certutil\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "5af14ad8-8c41-4153-be54-f0c65932461c",
      "type": "execute-command",
      "data": {
        "command": "certutil -addstore my #{pfx_path}\n",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "7378fd81-8fb0-4c3a-8448-f855d9c40264",
      "type": "execute-command",
      "data": {
        "command": "try {\n$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\nGet-ChildItem Cert:\\LocalMachine\\Root\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n} catch { }\n",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "6d801ecd-2b13-499c-abc9-2c418eb1edde",
      "name": "Check dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "18ed050a-3fd8-463c-9fa8-859fc3955737",
      "name": "Resolve dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "$cert = New-SelfSignedCertificate -DnsName atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My\nExport-Certificate -Type CERT -Cert  Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -FilePath #{pfx_path}\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) | Remove-Item\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "f80ac975-ab15-4b4b-832c-4e0cf0a4e3d1",
      "name": "Re-check dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": true
    }
  ],
  "flows": [
    {
      "s": "5af14ad8-8c41-4153-be54-f0c65932461c",
      "p": "on-success",
      "o": "7378fd81-8fb0-4c3a-8448-f855d9c40264"
    },
    {
      "s": "5af14ad8-8c41-4153-be54-f0c65932461c",
      "p": "on-failure",
      "o": "7378fd81-8fb0-4c3a-8448-f855d9c40264"
    },
    {
      "s": "6d801ecd-2b13-499c-abc9-2c418eb1edde",
      "p": "on-success",
      "o": "5af14ad8-8c41-4153-be54-f0c65932461c"
    },
    {
      "s": "6d801ecd-2b13-499c-abc9-2c418eb1edde",
      "p": "on-failure",
      "o": "18ed050a-3fd8-463c-9fa8-859fc3955737"
    },
    {
      "s": "18ed050a-3fd8-463c-9fa8-859fc3955737",
      "p": "on-success",
      "o": "f80ac975-ab15-4b4b-832c-4e0cf0a4e3d1"
    },
    {
      "s": "f80ac975-ab15-4b4b-832c-4e0cf0a4e3d1",
      "p": "on-failure",
      "o": "5af14ad8-8c41-4153-be54-f0c65932461c"
    }
  ],
  "tags": [
    "T1553",
    "T1553.004"
  ],
  "input_arguments": [
    {
      "name": "pfx_path",
      "type": "path",
      "description": "Path of the certificate",
      "value": "$env:Temp\\rootCA2.cer"
    }
  ]
}