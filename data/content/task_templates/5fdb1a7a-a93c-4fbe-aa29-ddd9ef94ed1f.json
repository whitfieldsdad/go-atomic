{
  "id": "5fdb1a7a-a93c-4fbe-aa29-ddd9ef94ed1f",
  "name": "Install root CA on Windows with certutil",
  "description": "Creates a root CA with certutil\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "180a89db-a882-49a0-9d99-3416c9ddb20d",
      "type": "execute-command",
      "data": {
        "command": "certutil -addstore my #{pfx_path}",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "1a002e52-1830-4c8f-a07a-24d88e3d5c77",
      "type": "execute-command",
      "data": {
        "command": "try {\n$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\nGet-ChildItem Cert:\\LocalMachine\\Root\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n} catch { }",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "57d9bb48-b42c-467f-8599-2f4175621883",
      "name": "Check dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "0bd34113-462b-4946-b0cb-c28e2dc67158",
      "name": "Resolve dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "$cert = New-SelfSignedCertificate -DnsName atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My\nExport-Certificate -Type CERT -Cert  Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -FilePath #{pfx_path}\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) | Remove-Item",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "87802702-9a2a-48cd-b57d-1efd593f3ff7",
      "name": "Re-check dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": true
    }
  ],
  "flows": [
    {
      "s": "180a89db-a882-49a0-9d99-3416c9ddb20d",
      "p": "on-success",
      "o": "1a002e52-1830-4c8f-a07a-24d88e3d5c77"
    },
    {
      "s": "180a89db-a882-49a0-9d99-3416c9ddb20d",
      "p": "on-failure",
      "o": "1a002e52-1830-4c8f-a07a-24d88e3d5c77"
    },
    {
      "s": "57d9bb48-b42c-467f-8599-2f4175621883",
      "p": "on-success",
      "o": "180a89db-a882-49a0-9d99-3416c9ddb20d"
    },
    {
      "s": "57d9bb48-b42c-467f-8599-2f4175621883",
      "p": "on-failure",
      "o": "0bd34113-462b-4946-b0cb-c28e2dc67158"
    },
    {
      "s": "0bd34113-462b-4946-b0cb-c28e2dc67158",
      "p": "on-success",
      "o": "87802702-9a2a-48cd-b57d-1efd593f3ff7"
    },
    {
      "s": "87802702-9a2a-48cd-b57d-1efd593f3ff7",
      "p": "on-failure",
      "o": "180a89db-a882-49a0-9d99-3416c9ddb20d"
    }
  ],
  "tags": [
    "T1553",
    "T1553.004"
  ],
  "input_arguments": [
    {
      "name": "pfx_path",
      "type": "path",
      "description": "Path of the certificate",
      "value": "$env:Temp\\rootCA2.cer"
    }
  ]
}