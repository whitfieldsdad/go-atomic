{
  "id": "5fdb1a7a-a93c-4fbe-aa29-ddd9ef94ed1f",
  "name": "Install root CA on Windows with certutil",
  "description": "Creates a root CA with certutil\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "33ccb4fb-a8a8-46db-ac7b-841749aebb73",
      "type": "execute-command",
      "data": {
        "command": "certutil -addstore my #{pfx_path}",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "9dc34622-bb1f-41f5-9767-16c96331607f",
      "type": "execute-command",
      "data": {
        "command": "try {\n$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\nGet-ChildItem Cert:\\LocalMachine\\Root\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n} catch { }",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "01739c99-c82e-4615-ac6b-f3c54ce1d923",
      "name": "Check dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "fd55b5c7-3b54-4051-8fff-e36c5b17b549",
      "name": "Resolve dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "$cert = New-SelfSignedCertificate -DnsName atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My\nExport-Certificate -Type CERT -Cert  Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -FilePath #{pfx_path}\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) | Remove-Item",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "1e6a5c16-88ee-46ee-96fd-11c807fe940c",
      "name": "Re-check dependency 1/1",
      "description": "Certificate must exist at specified location (#{pfx_path})\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": true
    }
  ],
  "flows": [
    {
      "s": "33ccb4fb-a8a8-46db-ac7b-841749aebb73",
      "p": "on-success",
      "o": "9dc34622-bb1f-41f5-9767-16c96331607f"
    },
    {
      "s": "33ccb4fb-a8a8-46db-ac7b-841749aebb73",
      "p": "on-failure",
      "o": "9dc34622-bb1f-41f5-9767-16c96331607f"
    },
    {
      "s": "01739c99-c82e-4615-ac6b-f3c54ce1d923",
      "p": "on-success",
      "o": "33ccb4fb-a8a8-46db-ac7b-841749aebb73"
    },
    {
      "s": "01739c99-c82e-4615-ac6b-f3c54ce1d923",
      "p": "on-failure",
      "o": "fd55b5c7-3b54-4051-8fff-e36c5b17b549"
    },
    {
      "s": "fd55b5c7-3b54-4051-8fff-e36c5b17b549",
      "p": "on-success",
      "o": "1e6a5c16-88ee-46ee-96fd-11c807fe940c"
    },
    {
      "s": "1e6a5c16-88ee-46ee-96fd-11c807fe940c",
      "p": "on-failure",
      "o": "33ccb4fb-a8a8-46db-ac7b-841749aebb73"
    }
  ],
  "tags": [
    "T1553",
    "T1553.004"
  ],
  "input_arguments": [
    {
      "name": "pfx_path",
      "type": "path",
      "description": "Path of the certificate",
      "value": "$env:Temp\\rootCA2.cer"
    }
  ]
}