{
  "id": "0e65ae27-5385-46b4-98ac-607a8ee82261",
  "name": "Azure AD - adding user to Azure AD role",
  "description": "The adversaries want to add user to some Azure AD role. Threat actor \nmay be interested primarily in highly privileged roles, e.g. Global Administrator, Application Administrator, \nPrivileged Authentication Administrator (this role can reset Global Administrator password!).\nBy default, the role Global Reader is assigned to the user principal in this test.\n\nThe account you use to run the PowerShell command should have Privileged Role Administrator or Global Administrator role in your Azure AD.\n\nDetection hint - check Activity \"Add member to role\" in Azure AD Audit Logs. In targer you will also see User as a type.\n",
  "platforms": [
    "azure-ad"
  ],
  "steps": [
    {
      "id": "706d601c-7eb2-4a30-b138-e702de5b4a2b",
      "type": "execute-command",
      "data": {
        "command": "Import-Module -Name AzureAD\n$PWord = ConvertTo-SecureString -String \"#{password}\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $Pword\nConnect-AzureAD -Credential $Credential\n\n$user = Get-AzureADUser -Filter \"DisplayName eq '#{user_principal_name}' or UserPrincipalName eq '#{user_principal_name}'\"\nif ($user -eq $null) { Write-Warning \"User not found\"; exit }\n$role = Get-AzureADDirectoryRole -Filter \"DisplayName eq '#{role_name}'\"\nif ($role -eq $null) { Write-Warning \"Role not found\"; exit }\nAdd-AzureADDirectoryRoleMember -ObjectId $role.ObjectId -RefObjectId $user.ObjectId\nWrite-Host \"User $($user.DisplayName) was added to $($role.DisplayName) role\"\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "c6e52fe5-7317-4ba9-a4b9-fcfadc345bb6",
      "type": "execute-command",
      "data": {
        "command": "Import-Module -Name AzureAD -ErrorAction Ignore\n$PWord = ConvertTo-SecureString -String \"#{password}\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $Pword\nConnect-AzureAD -Credential $Credential -ErrorAction Ignore\n\n$user = Get-AzureADUser -Filter \"DisplayName eq '#{user_principal_name}' or UserPrincipalName eq '#{user_principal_name}'\"\nif ($user -eq $null) { Write-Warning \"User not found\"; exit }\n$role = Get-AzureADDirectoryRole -Filter \"DisplayName eq '#{role_name}'\"\nif ($role -eq $null) { Write-Warning \"Role not found\"; exit }\n\nRemove-AzureADDirectoryRoleMember -ObjectId $role.ObjectId -MemberId $user.ObjectId\nWrite-Host \"User $($user.DisplayName) was removed from $($role.DisplayName) role\"\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "9479a521-f660-44b8-bb82-22e56631de23",
      "name": "Check dependency 1/1",
      "description": "AzureAD module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name AzureAD -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "bab0faba-e768-42c3-af96-30c3856e64bd",
      "name": "Resolve dependency 1/1",
      "description": "AzureAD module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "Install-Module -Name AzureAD -Force\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "f3de54ad-e899-45f7-8774-323b4b02c1b8",
      "name": "Re-check dependency 1/1",
      "description": "AzureAD module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name AzureAD -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "706d601c-7eb2-4a30-b138-e702de5b4a2b",
      "p": "on-success",
      "o": "c6e52fe5-7317-4ba9-a4b9-fcfadc345bb6"
    },
    {
      "s": "706d601c-7eb2-4a30-b138-e702de5b4a2b",
      "p": "on-failure",
      "o": "c6e52fe5-7317-4ba9-a4b9-fcfadc345bb6"
    },
    {
      "s": "9479a521-f660-44b8-bb82-22e56631de23",
      "p": "on-success",
      "o": "706d601c-7eb2-4a30-b138-e702de5b4a2b"
    },
    {
      "s": "9479a521-f660-44b8-bb82-22e56631de23",
      "p": "on-failure",
      "o": "bab0faba-e768-42c3-af96-30c3856e64bd"
    },
    {
      "s": "bab0faba-e768-42c3-af96-30c3856e64bd",
      "p": "on-success",
      "o": "f3de54ad-e899-45f7-8774-323b4b02c1b8"
    },
    {
      "s": "f3de54ad-e899-45f7-8774-323b4b02c1b8",
      "p": "on-failure",
      "o": "706d601c-7eb2-4a30-b138-e702de5b4a2b"
    }
  ],
  "tags": [
    "T1098"
  ],
  "input_arguments": [
    {
      "name": "username",
      "type": "string",
      "description": "Azure AD username",
      "value": "jonh@contoso.com"
    },
    {
      "name": "password",
      "type": "string",
      "description": "Azure AD password",
      "value": "p4sswd"
    },
    {
      "name": "user_principal_name",
      "type": "string",
      "description": "Display Name, or User Principal Name, of the targeted user principal",
      "value": "SuperUser"
    },
    {
      "name": "role_name",
      "type": "string",
      "description": "Name of the targeted Azure AD role",
      "value": "Global Reader"
    }
  ]
}