{
  "id": "1e40bb1d-195e-401e-a86b-c192f55e005c",
  "name": "Azure - Dump Subscription Data with MicroBurst",
  "description": "Upon successful execution, this test will enumerate all resources that are contained within a valid Azure subscription. \nThe resources enumerated will display on screen, as well as several csv files and folders will be output to a specified directory, listing what resources were discovered by the script. \nSee https://dev.to/cheahengsoon/enumerating-subscription-information-with-microburst-35a1\n",
  "platforms": [
    "iaas:azure"
  ],
  "steps": [
    {
      "id": "7d247ce4-d70a-4243-98fa-92aa0d37a7c4",
      "type": "execute-command",
      "data": {
        "command": "import-module \"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-AzDomainInfo.ps1\"\n$Password = ConvertTo-SecureString -String \"#{password}\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $Password\nConnect-AzAccount -Credential $Credential | out-null\nGet-AzDomainInfo -folder #{output_directory} -subscription \"#{subscription_name}\" -verbose\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "e043aae1-3a0e-4a54-b1e4-072135006e6c",
      "type": "execute-command",
      "data": {
        "command": "remove-item #{output_directory} -recurse -force -erroraction silentlycontinue\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "07e2e1a8-2fce-41a6-aca6-9b4cfb5ae0b2",
      "name": "Check dependency 1/2",
      "description": "The Get-AzDomainInfo script must exist in PathToAtomicsFolder\\..\\ExternalPayloads.\n",
      "type": "execute-command",
      "data": {
        "command": "if (test-path \"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-AzDomainInfo.ps1\"){exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "f8412004-5654-4fdd-8810-f11ebe0e1f9a",
      "name": "Resolve dependency 1/2",
      "description": "The Get-AzDomainInfo script must exist in PathToAtomicsFolder\\..\\ExternalPayloads.\n",
      "type": "execute-command",
      "data": {
        "command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\ninvoke-webrequest \"https://raw.githubusercontent.com/NetSPI/MicroBurst/c771c665a2c71f9c5ba474869cd1c211ebee68fd/Az/Get-AzDomainInfo.ps1\" -outfile \"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-AzDomainInfo.ps1\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "fd4adb91-6deb-46fe-9529-64f9ec9e46ea",
      "name": "Re-check dependency 1/2",
      "description": "The Get-AzDomainInfo script must exist in PathToAtomicsFolder\\..\\ExternalPayloads.\n",
      "type": "execute-command",
      "data": {
        "command": "if (test-path \"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-AzDomainInfo.ps1\"){exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "fa82ca92-012d-4b67-ba62-4d3052f2bdcd",
      "name": "Check dependency 2/2",
      "description": "The Az module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name Az -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "e817190f-2f9e-437a-a1ef-776cbf9e65df",
      "name": "Resolve dependency 2/2",
      "description": "The Az module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "Install-Module -Name Az -Force\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "35a6a82b-8a45-433a-8351-580fdc18be4b",
      "name": "Re-check dependency 2/2",
      "description": "The Az module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name Az -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "7d247ce4-d70a-4243-98fa-92aa0d37a7c4",
      "p": "on-success",
      "o": "e043aae1-3a0e-4a54-b1e4-072135006e6c"
    },
    {
      "s": "7d247ce4-d70a-4243-98fa-92aa0d37a7c4",
      "p": "on-failure",
      "o": "e043aae1-3a0e-4a54-b1e4-072135006e6c"
    },
    {
      "s": "07e2e1a8-2fce-41a6-aca6-9b4cfb5ae0b2",
      "p": "on-success",
      "o": "7d247ce4-d70a-4243-98fa-92aa0d37a7c4"
    },
    {
      "s": "07e2e1a8-2fce-41a6-aca6-9b4cfb5ae0b2",
      "p": "on-failure",
      "o": "f8412004-5654-4fdd-8810-f11ebe0e1f9a"
    },
    {
      "s": "f8412004-5654-4fdd-8810-f11ebe0e1f9a",
      "p": "on-success",
      "o": "fd4adb91-6deb-46fe-9529-64f9ec9e46ea"
    },
    {
      "s": "fd4adb91-6deb-46fe-9529-64f9ec9e46ea",
      "p": "on-failure",
      "o": "7d247ce4-d70a-4243-98fa-92aa0d37a7c4"
    },
    {
      "s": "fa82ca92-012d-4b67-ba62-4d3052f2bdcd",
      "p": "on-success",
      "o": "7d247ce4-d70a-4243-98fa-92aa0d37a7c4"
    },
    {
      "s": "fa82ca92-012d-4b67-ba62-4d3052f2bdcd",
      "p": "on-failure",
      "o": "e817190f-2f9e-437a-a1ef-776cbf9e65df"
    },
    {
      "s": "e817190f-2f9e-437a-a1ef-776cbf9e65df",
      "p": "on-success",
      "o": "35a6a82b-8a45-433a-8351-580fdc18be4b"
    },
    {
      "s": "35a6a82b-8a45-433a-8351-580fdc18be4b",
      "p": "on-failure",
      "o": "7d247ce4-d70a-4243-98fa-92aa0d37a7c4"
    }
  ],
  "tags": [
    "T1526",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "username",
      "type": "string",
      "description": "Azure AD username",
      "value": ""
    },
    {
      "name": "password",
      "type": "string",
      "description": "Azure AD password",
      "value": "T1082Az"
    },
    {
      "name": "output_directory",
      "type": "string",
      "description": "Directory to output results to",
      "value": "$env:temp\\T1526Test1"
    },
    {
      "name": "subscription_name",
      "type": "string",
      "description": "Azure subscription name to scan",
      "value": ""
    }
  ]
}