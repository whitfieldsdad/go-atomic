{
  "id": "cbb6799a-425c-4f83-9194-5447a909d67f",
  "name": "Word spawned a command shell and used an IP address in the command line",
  "description": "Word spawning a command prompt then running a command with an IP address in the command line is an indicator of malicious activity.\nUpon execution, CMD will be launched and ping 8.8.8.8.\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "ba3b5a9d-4062-426d-9ec0-df54b272ae7d",
      "type": "execute-command",
      "data": {
        "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing)\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"ping 8.8.8.8`\"`n\"\nInvoke-MalDoc -macroCode $macrocode -officeProduct \"#{ms_product}\"\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "3fc78859-c2cb-41f4-ab94-72b16e871d1c",
      "type": "execute-command",
      "data": {
        "command": "Remove-Item #{jse_path} -ErrorAction Ignore\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "a0516ac4-169b-432d-a2df-6bf14347d290",
      "name": "Check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "cfabc707-35fb-4b05-ba15-d32de9479f4e",
      "name": "Resolve dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "Write-Host \"You will need to install Microsoft #{ms_product} manually to meet this requirement\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "82cc8749-b780-408c-8e87-5a064ecb259d",
      "name": "Re-check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "ba3b5a9d-4062-426d-9ec0-df54b272ae7d",
      "p": "on-success",
      "o": "3fc78859-c2cb-41f4-ab94-72b16e871d1c"
    },
    {
      "s": "ba3b5a9d-4062-426d-9ec0-df54b272ae7d",
      "p": "on-failure",
      "o": "3fc78859-c2cb-41f4-ab94-72b16e871d1c"
    },
    {
      "s": "a0516ac4-169b-432d-a2df-6bf14347d290",
      "p": "on-success",
      "o": "ba3b5a9d-4062-426d-9ec0-df54b272ae7d"
    },
    {
      "s": "a0516ac4-169b-432d-a2df-6bf14347d290",
      "p": "on-failure",
      "o": "cfabc707-35fb-4b05-ba15-d32de9479f4e"
    },
    {
      "s": "cfabc707-35fb-4b05-ba15-d32de9479f4e",
      "p": "on-success",
      "o": "82cc8749-b780-408c-8e87-5a064ecb259d"
    },
    {
      "s": "82cc8749-b780-408c-8e87-5a064ecb259d",
      "p": "on-failure",
      "o": "ba3b5a9d-4062-426d-9ec0-df54b272ae7d"
    }
  ],
  "tags": [
    "T1566",
    "T1566.001"
  ],
  "input_arguments": [
    {
      "name": "jse_path",
      "type": "string",
      "description": "Path for the macro to write out the \"malicious\" .jse file\n",
      "value": "C:\\Users\\Public\\art.jse"
    },
    {
      "name": "ms_product",
      "type": "string",
      "description": "Maldoc application Word or Excel",
      "value": "Word"
    }
  ]
}