{
  "id": "c51cec55-28dd-4ad2-9461-1eacbc82c3a0",
  "name": "Data Compressed - nix - zip",
  "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard zip compression.\n",
  "platforms": [
    "linux",
    "darwin"
  ],
  "steps": [
    {
      "id": "7b1caccb-28e2-4ffb-806c-8586c4d3b9b1",
      "type": "execute-command",
      "data": {
        "command": "zip #{output_file} #{input_files}",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "58eb43ed-a7f0-45b7-be8b-2c6a88d1b71c",
      "type": "execute-command",
      "data": {
        "command": "rm -f #{output_file}",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "60079a12-9b5b-442f-9e76-deaaa081b410",
      "name": "Check dependency 1/1",
      "description": "Files to zip must exist (#{input_files})\n",
      "type": "execute-command",
      "data": {
        "command": "if [ $(ls #{input_files} | wc -l) \u003e 0 ] \u0026\u0026 [ -x $(which zip) ] ; then exit 0; else exit 1; fi;",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "58fe389d-56f6-4042-8695-487975145c49",
      "name": "Resolve dependency 1/1",
      "description": "Files to zip must exist (#{input_files})\n",
      "type": "execute-command",
      "data": {
        "command": "(which yum \u0026\u0026 yum -y install epel-release zip)||(which apt-get \u0026\u0026 apt-get install -y zip)\necho Please set input_files argument to include files that exist",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "429ef5ae-fb0f-4770-a9f0-01b00ffec09b",
      "name": "Re-check dependency 1/1",
      "description": "Files to zip must exist (#{input_files})\n",
      "type": "execute-command",
      "data": {
        "command": "if [ $(ls #{input_files} | wc -l) \u003e 0 ] \u0026\u0026 [ -x $(which zip) ] ; then exit 0; else exit 1; fi;",
        "command_type": "sh"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "7b1caccb-28e2-4ffb-806c-8586c4d3b9b1",
      "p": "on-success",
      "o": "58eb43ed-a7f0-45b7-be8b-2c6a88d1b71c"
    },
    {
      "s": "7b1caccb-28e2-4ffb-806c-8586c4d3b9b1",
      "p": "on-failure",
      "o": "58eb43ed-a7f0-45b7-be8b-2c6a88d1b71c"
    },
    {
      "s": "60079a12-9b5b-442f-9e76-deaaa081b410",
      "p": "on-success",
      "o": "7b1caccb-28e2-4ffb-806c-8586c4d3b9b1"
    },
    {
      "s": "60079a12-9b5b-442f-9e76-deaaa081b410",
      "p": "on-failure",
      "o": "58fe389d-56f6-4042-8695-487975145c49"
    },
    {
      "s": "58fe389d-56f6-4042-8695-487975145c49",
      "p": "on-success",
      "o": "429ef5ae-fb0f-4770-a9f0-01b00ffec09b"
    },
    {
      "s": "429ef5ae-fb0f-4770-a9f0-01b00ffec09b",
      "p": "on-failure",
      "o": "7b1caccb-28e2-4ffb-806c-8586c4d3b9b1"
    }
  ],
  "tags": [
    "T1560",
    "T1560.001"
  ],
  "input_arguments": [
    {
      "name": "input_files",
      "type": "path",
      "description": "Path that should be compressed into our output file, may include wildcards",
      "value": "/var/log/{w,b}tmp"
    },
    {
      "name": "output_file",
      "type": "path",
      "description": "Path that should be output as a zip archive",
      "value": "$HOME/data.zip"
    }
  ]
}