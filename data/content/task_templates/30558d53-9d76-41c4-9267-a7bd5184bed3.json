{
  "id": "30558d53-9d76-41c4-9267-a7bd5184bed3",
  "name": "Replace Desktop Wallpaper",
  "description": "Downloads an image from a URL and sets it as the desktop wallpaper.\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "853cff83-d994-413f-8af9-86a7b8aab6a6",
      "type": "execute-command",
      "data": {
        "command": "$url = \"#{url_of_wallpaper}\"\n$imgLocation = \"#{wallpaper_location}\"\n$orgWallpaper = (Get-ItemProperty -Path Registry::'HKEY_CURRENT_USER\\Control Panel\\Desktop\\' -Name WallPaper).WallPaper\n$orgWallpaper | Out-File -FilePath \"#{pointer_to_orginal_wallpaper}\"\n$updateWallpapercode = @' \nusing System.Runtime.InteropServices; \nnamespace Win32{\n\n    public class Wallpaper{ \n        [DllImport(\"user32.dll\", CharSet=CharSet.Auto)] \n         static extern int SystemParametersInfo (int uAction , int uParam , string lpvParam , int fuWinIni) ; \n         \n         public static void SetWallpaper(string thePath){ \n            SystemParametersInfo(20,0,thePath,3); \n        }\n    }\n} \n'@\n$wc = New-Object System.Net.WebClient  \ntry{  \n    $wc.DownloadFile($url, $imgLocation)\n    add-type $updateWallpapercode \n    [Win32.Wallpaper]::SetWallpaper($imgLocation)\n} \ncatch [System.Net.WebException]{  \n    Write-Host(\"Cannot download $url\") \n    add-type $updateWallpapercode \n    [Win32.Wallpaper]::SetWallpaper($imgLocation)\n} \nfinally{    \n    $wc.Dispose()  \n}\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "c0afbd3d-6dcf-4aae-b66f-8a62c32cbcbb",
      "type": "execute-command",
      "data": {
        "command": "$updateWallpapercode = @' \nusing System.Runtime.InteropServices; \nnamespace Win32{\n\n    public class Wallpaper{ \n        [DllImport(\"user32.dll\", CharSet=CharSet.Auto)] \n         static extern int SystemParametersInfo (int uAction , int uParam , string lpvParam , int fuWinIni) ; \n         \n         public static void SetWallpaper(string thePath){ \n            SystemParametersInfo(20,0,thePath,3); \n        }\n    }\n} \n'@\nif (Test-Path -Path #{pointer_to_orginal_wallpaper} -PathType Leaf) {\n     $orgImg = Get-Content -Path \"#{pointer_to_orginal_wallpaper}\"\n     add-type $updateWallpapercode \n     [Win32.Wallpaper]::SetWallpaper($orgImg)\n}\nRemove-Item \"#{pointer_to_orginal_wallpaper}\" -ErrorAction Ignore\nRemove-Item \"#{wallpaper_location}\" -ErrorAction Ignore\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "853cff83-d994-413f-8af9-86a7b8aab6a6",
      "p": "on-success",
      "o": "c0afbd3d-6dcf-4aae-b66f-8a62c32cbcbb"
    },
    {
      "s": "853cff83-d994-413f-8af9-86a7b8aab6a6",
      "p": "on-failure",
      "o": "c0afbd3d-6dcf-4aae-b66f-8a62c32cbcbb"
    }
  ],
  "tags": [
    "T1491",
    "T1491.001"
  ],
  "input_arguments": [
    {
      "name": "url_of_wallpaper",
      "type": "url",
      "description": "URL pointing to the image file you wish to set as wallpaper",
      "value": "https://redcanary.com/wp-content/uploads/Atomic-Red-Team-Logo.png"
    },
    {
      "name": "pointer_to_orginal_wallpaper",
      "type": "string",
      "description": "Full path to where a file containing the original wallpaper location will be saved",
      "value": "$env:TEMP\\T1491.001-OrginalWallpaperLocation"
    },
    {
      "name": "wallpaper_location",
      "type": "string",
      "description": "Full path to where the downloaded wallpaper image will be saved",
      "value": "$env:TEMP\\T1491.001-newWallpaper.png"
    }
  ]
}