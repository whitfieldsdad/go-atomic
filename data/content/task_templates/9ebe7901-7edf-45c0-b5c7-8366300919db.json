{
  "id": "9ebe7901-7edf-45c0-b5c7-8366300919db",
  "name": "Invoke-ATHRemoteFXvGPUDisablementCommand base test",
  "description": "RemoteFXvGPUDisablement.exe is an abusable, signed PowerShell host executable that was introduced in Windows 10 and Server 2019 (OS Build 17763.1339).\n\nOne of the PowerShell functions called by RemoteFXvGPUDisablement.exe is Get-VMRemoteFXPhysicalVideoAdapter, a part of the Hyper-V module. This atomic test influences RemoteFXvGPUDisablement.exe to execute custom PowerShell code by using a technique referred to as \"PowerShell module load-order hijacking\" where a module containing, in this case, an implementation of the Get-VMRemoteFXPhysicalVideoAdapter is loaded first by way of introducing a temporary module into the first directory listed in the %PSModulePath% environment variable or within a user-specified module directory outside of %PSModulePath%. Upon execution the temporary module is deleted.\n\nInvoke-ATHRemoteFXvGPUDisablementCommand is used in this test to demonstrate how a PowerShell host executable can be directed to user-supplied PowerShell code without needing to supply anything at the command-line. PowerShell code execution is triggered when supplying the \"Disable\" argument to RemoteFXvGPUDisablement.exe.\n\nThe Invoke-ATHRemoteFXvGPUDisablementCommand function outputs all relevant execution-related artifacts.\n\nReference: https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "4acc2cf1-8c0e-4d93-8841-e0e6d4f47280",
      "type": "execute-command",
      "data": {
        "command": "Invoke-ATHRemoteFXvGPUDisablementCommand -ModuleName #{module_name} -ModulePath #{module_path}",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "a33072f8-a297-4543-9dff-3c9b79c318c3",
      "name": "Check dependency 1/1",
      "description": "The AtomicTestHarnesses module must be installed and Invoke-ATHRemoteFXvGPUDisablementCommand must be exported in the module.",
      "type": "execute-command",
      "data": {
        "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable\nif (-not $RequiredModule) {exit 1}\nif (-not $RequiredModule.ExportedCommands['Invoke-ATHRemoteFXvGPUDisablementCommand']) {exit 1} else {exit 0}",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "9b2ac0c1-4507-44fd-b99d-d884a5ac6ebc",
      "name": "Resolve dependency 1/1",
      "description": "The AtomicTestHarnesses module must be installed and Invoke-ATHRemoteFXvGPUDisablementCommand must be exported in the module.",
      "type": "execute-command",
      "data": {
        "command": "Install-Module -Name AtomicTestHarnesses -Scope CurrentUser -Force",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "047ce380-6ad8-4e55-8a92-2cc348a30aa7",
      "name": "Re-check dependency 1/1",
      "description": "The AtomicTestHarnesses module must be installed and Invoke-ATHRemoteFXvGPUDisablementCommand must be exported in the module.",
      "type": "execute-command",
      "data": {
        "command": "$RequiredModule = Get-Module -Name AtomicTestHarnesses -ListAvailable\nif (-not $RequiredModule) {exit 1}\nif (-not $RequiredModule.ExportedCommands['Invoke-ATHRemoteFXvGPUDisablementCommand']) {exit 1} else {exit 0}",
        "command_type": "powershell"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "a33072f8-a297-4543-9dff-3c9b79c318c3",
      "p": "on-success",
      "o": "4acc2cf1-8c0e-4d93-8841-e0e6d4f47280"
    },
    {
      "s": "a33072f8-a297-4543-9dff-3c9b79c318c3",
      "p": "on-failure",
      "o": "9b2ac0c1-4507-44fd-b99d-d884a5ac6ebc"
    },
    {
      "s": "9b2ac0c1-4507-44fd-b99d-d884a5ac6ebc",
      "p": "on-success",
      "o": "047ce380-6ad8-4e55-8a92-2cc348a30aa7"
    },
    {
      "s": "047ce380-6ad8-4e55-8a92-2cc348a30aa7",
      "p": "on-failure",
      "o": "4acc2cf1-8c0e-4d93-8841-e0e6d4f47280"
    }
  ],
  "tags": [
    "T1218"
  ],
  "input_arguments": [
    {
      "name": "module_name",
      "type": "string",
      "description": "Specifies a temporary module name to use. If -ModuleName is not supplied, a 16-character random temporary module name is used. A PowerShell module can have any name. Because Get-VMRemoteFXPhysicalVideoAdapter abuses module load order, a module name must be specified.",
      "value": "foo"
    },
    {
      "name": "module_path",
      "type": "string",
      "description": "Specifies an alternate, non-default PowerShell module path for RemoteFXvGPUDisablement.exe. If -ModulePath is not specified, the first entry in %PSModulePath% will be used. Typically, this is %USERPROFILE%\\Documents\\WindowsPowerShell\\Modules.",
      "value": "$PWD"
    }
  ]
}