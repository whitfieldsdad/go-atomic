{
  "id": "76f49d86-5eb1-461a-a032-a480f86652f1",
  "name": "Install root CA on Windows",
  "description": "Creates a root CA with Powershell\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "4b102b60-26e0-43b0-a5b4-79b281ac3085",
      "type": "execute-command",
      "data": {
        "command": "$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nMove-Item -Path $cert.PSPath -Destination \"Cert:\\LocalMachine\\Root\"\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "734f2b1b-ce63-4bf8-b57f-408bca7b25b8",
      "type": "execute-command",
      "data": {
        "command": "try {\n   $cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My -ErrorAction Ignore\n   Get-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n   Get-ChildItem Cert:\\LocalMachine\\Root\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n}\ncatch { }\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "8f806b4d-dd51-4820-b2c7-c7f0d39f7988",
      "name": "Check dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "ff48c09d-2cad-42f8-bef9-de35ef80b786",
      "name": "Resolve dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "$cert = New-SelfSignedCertificate -DnsName atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My\nExport-Certificate -Type CERT -Cert  Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -FilePath #{pfx_path}\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) | Remove-Item\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "c15897b3-9fc2-4413-b50a-d5d8ca0d6132",
      "name": "Re-check dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "4b102b60-26e0-43b0-a5b4-79b281ac3085",
      "p": "on-success",
      "o": "734f2b1b-ce63-4bf8-b57f-408bca7b25b8"
    },
    {
      "s": "4b102b60-26e0-43b0-a5b4-79b281ac3085",
      "p": "on-failure",
      "o": "734f2b1b-ce63-4bf8-b57f-408bca7b25b8"
    },
    {
      "s": "8f806b4d-dd51-4820-b2c7-c7f0d39f7988",
      "p": "on-success",
      "o": "4b102b60-26e0-43b0-a5b4-79b281ac3085"
    },
    {
      "s": "8f806b4d-dd51-4820-b2c7-c7f0d39f7988",
      "p": "on-failure",
      "o": "ff48c09d-2cad-42f8-bef9-de35ef80b786"
    },
    {
      "s": "ff48c09d-2cad-42f8-bef9-de35ef80b786",
      "p": "on-success",
      "o": "c15897b3-9fc2-4413-b50a-d5d8ca0d6132"
    },
    {
      "s": "c15897b3-9fc2-4413-b50a-d5d8ca0d6132",
      "p": "on-failure",
      "o": "4b102b60-26e0-43b0-a5b4-79b281ac3085"
    }
  ],
  "tags": [
    "T1553.004",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "pfx_path",
      "type": "path",
      "description": "Path of the certificate",
      "value": "rootCA.cer"
    }
  ]
}