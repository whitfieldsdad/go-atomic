{
  "id": "76f49d86-5eb1-461a-a032-a480f86652f1",
  "name": "Install root CA on Windows",
  "description": "Creates a root CA with Powershell\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "5e3e1d9e-4107-4218-8e4b-c695ba8b41d4",
      "type": "execute-command",
      "data": {
        "command": "$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nMove-Item -Path $cert.PSPath -Destination \"Cert:\\LocalMachine\\Root\"",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "b841c396-19ea-45dc-9d64-2366dacc1a2f",
      "type": "execute-command",
      "data": {
        "command": "try {\n   $cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My -ErrorAction Ignore\n   Get-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n   Get-ChildItem Cert:\\LocalMachine\\Root\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n}\ncatch { }",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "a5d99419-9f2c-4ff9-9bf6-0c6a3ef8ac2c",
      "name": "Check dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "c62b4b0e-ee60-4ca5-9a15-22db33c81cb5",
      "name": "Resolve dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "$cert = New-SelfSignedCertificate -DnsName atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My\nExport-Certificate -Type CERT -Cert  Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -FilePath #{pfx_path}\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) | Remove-Item",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "a2f65ff0-d56d-4a77-8920-10dbcf52d600",
      "name": "Re-check dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": true
    }
  ],
  "flows": [
    {
      "s": "5e3e1d9e-4107-4218-8e4b-c695ba8b41d4",
      "p": "on-success",
      "o": "b841c396-19ea-45dc-9d64-2366dacc1a2f"
    },
    {
      "s": "5e3e1d9e-4107-4218-8e4b-c695ba8b41d4",
      "p": "on-failure",
      "o": "b841c396-19ea-45dc-9d64-2366dacc1a2f"
    },
    {
      "s": "a5d99419-9f2c-4ff9-9bf6-0c6a3ef8ac2c",
      "p": "on-success",
      "o": "5e3e1d9e-4107-4218-8e4b-c695ba8b41d4"
    },
    {
      "s": "a5d99419-9f2c-4ff9-9bf6-0c6a3ef8ac2c",
      "p": "on-failure",
      "o": "c62b4b0e-ee60-4ca5-9a15-22db33c81cb5"
    },
    {
      "s": "c62b4b0e-ee60-4ca5-9a15-22db33c81cb5",
      "p": "on-success",
      "o": "a2f65ff0-d56d-4a77-8920-10dbcf52d600"
    },
    {
      "s": "a2f65ff0-d56d-4a77-8920-10dbcf52d600",
      "p": "on-failure",
      "o": "5e3e1d9e-4107-4218-8e4b-c695ba8b41d4"
    }
  ],
  "tags": [
    "T1553",
    "T1553.004"
  ],
  "input_arguments": [
    {
      "name": "pfx_path",
      "type": "path",
      "description": "Path of the certificate",
      "value": "rootCA.cer"
    }
  ]
}