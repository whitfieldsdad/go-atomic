{
  "id": "76f49d86-5eb1-461a-a032-a480f86652f1",
  "name": "Install root CA on Windows",
  "description": "Creates a root CA with Powershell\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "66ea598c-0466-4c19-bbb7-2b9548e712ab",
      "type": "execute-command",
      "data": {
        "command": "$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nMove-Item -Path $cert.PSPath -Destination \"Cert:\\LocalMachine\\Root\"",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "16cc87ce-c53a-482f-895a-61c976a47afd",
      "type": "execute-command",
      "data": {
        "command": "try {\n   $cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My -ErrorAction Ignore\n   Get-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n   Get-ChildItem Cert:\\LocalMachine\\Root\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n}\ncatch { }",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "427490ce-b17d-447d-8e88-cc3b753cf012",
      "name": "Check dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "5403c2c4-a185-42d8-92fb-6845c0791bfe",
      "name": "Resolve dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "$cert = New-SelfSignedCertificate -DnsName atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My\nExport-Certificate -Type CERT -Cert  Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -FilePath #{pfx_path}\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) | Remove-Item",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "d01b5150-0e1d-433d-8abc-c8660b09368e",
      "name": "Re-check dependency 1/1",
      "description": "Verify the certificate exists. It generates if not on disk.\n",
      "type": "execute-command",
      "data": {
        "command": "if (Test-Path #{pfx_path}) { exit 0 } else { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": true
    }
  ],
  "flows": [
    {
      "s": "66ea598c-0466-4c19-bbb7-2b9548e712ab",
      "p": "on-success",
      "o": "16cc87ce-c53a-482f-895a-61c976a47afd"
    },
    {
      "s": "66ea598c-0466-4c19-bbb7-2b9548e712ab",
      "p": "on-failure",
      "o": "16cc87ce-c53a-482f-895a-61c976a47afd"
    },
    {
      "s": "427490ce-b17d-447d-8e88-cc3b753cf012",
      "p": "on-success",
      "o": "66ea598c-0466-4c19-bbb7-2b9548e712ab"
    },
    {
      "s": "427490ce-b17d-447d-8e88-cc3b753cf012",
      "p": "on-failure",
      "o": "5403c2c4-a185-42d8-92fb-6845c0791bfe"
    },
    {
      "s": "5403c2c4-a185-42d8-92fb-6845c0791bfe",
      "p": "on-success",
      "o": "d01b5150-0e1d-433d-8abc-c8660b09368e"
    },
    {
      "s": "d01b5150-0e1d-433d-8abc-c8660b09368e",
      "p": "on-failure",
      "o": "66ea598c-0466-4c19-bbb7-2b9548e712ab"
    }
  ],
  "tags": [
    "T1553",
    "T1553.004"
  ],
  "input_arguments": [
    {
      "name": "pfx_path",
      "type": "path",
      "description": "Path of the certificate",
      "value": "rootCA.cer"
    }
  ]
}