{
  "id": "0330a5d2-a45a-4272-a9ee-e364411c4b18",
  "name": "Maldoc choice flags command execution",
  "description": "This Test uses a VBA macro to execute cmd with flags observed in recent maldoc and 2nd stage downloaders. Upon execution, CMD will be launched.\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "f07071d1-416f-4b47-86ca-b246d0e3c21b",
      "type": "execute-command",
      "data": {
        "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing)\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc -macroCode $macrocode -officeProduct \"#{ms_product}\"",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "9e795f0e-4afd-4a35-8edc-268175328324",
      "name": "Check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "66518bea-9dcb-4a23-b552-fd60ee556df3",
      "name": "Resolve dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "Write-Host \"You will need to install Microsoft #{ms_product} manually to meet this requirement\"",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "e55835c5-829b-4e8d-afe0-b43c169be9f0",
      "name": "Re-check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }",
        "command_type": "powershell"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "9e795f0e-4afd-4a35-8edc-268175328324",
      "p": "on-success",
      "o": "f07071d1-416f-4b47-86ca-b246d0e3c21b"
    },
    {
      "s": "9e795f0e-4afd-4a35-8edc-268175328324",
      "p": "on-failure",
      "o": "66518bea-9dcb-4a23-b552-fd60ee556df3"
    },
    {
      "s": "66518bea-9dcb-4a23-b552-fd60ee556df3",
      "p": "on-success",
      "o": "e55835c5-829b-4e8d-afe0-b43c169be9f0"
    },
    {
      "s": "e55835c5-829b-4e8d-afe0-b43c169be9f0",
      "p": "on-failure",
      "o": "f07071d1-416f-4b47-86ca-b246d0e3c21b"
    }
  ],
  "tags": [
    "T1204",
    "T1204.002"
  ],
  "input_arguments": [
    {
      "name": "ms_product",
      "type": "string",
      "description": "Maldoc application Word or Excel",
      "value": "Word"
    }
  ]
}