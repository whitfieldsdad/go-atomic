{
  "id": "7617f689-bbd8-44bc-adcd-6f8968897848",
  "name": "Export Root Certificate with Export-PFXCertificate",
  "description": "Creates a Root certificate and exports it with Export-PFXCertificate PowerShell Cmdlet.\nUpon a successful attempt, this will write a pfx to disk and utilize the Cmdlet Export-PFXCertificate.\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "393fe0b4-edc6-54cb-8033-63739898e639",
      "type": "execute-command",
      "data": {
        "command": "$mypwd = ConvertTo-SecureString -String \"AtomicRedTeam\" -Force -AsPlainText\n$cert = New-SelfSignedCertificate -DnsName atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My\nSet-Location Cert:\\LocalMachine\\My\nGet-ChildItem -Path $cert.Thumbprint | Export-PfxCertificate -FilePath #{pfx_path} -Password $mypwd",
        "command_type": "powershell"
      },
      "elevation_required": true
    },
    {
      "id": "723405b4-3c2a-5ef4-a5b9-14af340cbad2",
      "type": "execute-command",
      "data": {
        "command": "try {\n$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\nGet-ChildItem Cert:\\LocalMachine\\Root\\$($cert.Thumbprint) -ErrorAction Ignore | Remove-Item -ErrorAction Ignore\n} catch { }",
        "command_type": "powershell"
      },
      "elevation_required": true
    }
  ],
  "flows": [
    {
      "s": "393fe0b4-edc6-54cb-8033-63739898e639",
      "p": "on-success",
      "o": "723405b4-3c2a-5ef4-a5b9-14af340cbad2"
    },
    {
      "s": "393fe0b4-edc6-54cb-8033-63739898e639",
      "p": "on-failure",
      "o": "723405b4-3c2a-5ef4-a5b9-14af340cbad2"
    }
  ],
  "tags": [
    "T1552",
    "T1552.004"
  ],
  "input_arguments": [
    {
      "name": "pfx_path",
      "type": "string",
      "description": "output path of the certificate",
      "value": "$env:Temp\\atomicredteam.pfx"
    }
  ]
}