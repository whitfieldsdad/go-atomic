{
  "id": "a55a22e9-a3d3-42ce-bd48-2653adb8f7a9",
  "name": "Domain Account and Group Manipulate",
  "description": "Create a random atr-nnnnnnnn account and add it to a domain group (by default, Domain Admins). \n\nThe quickest way to run it is against a domain controller, using `-Session` of `Invoke-AtomicTest`. Alternatively,\nyou need to install PS Module ActiveDirectory (in prereqs) and run the script with appropriare AD privileges to \ncreate the user and alter the group. Automatic installation of the dependency requires an elevated session, \nand is unlikely to work with Powershell Core (untested).\n\nIf you consider running this test against a production Active Directory, the good practise is to create a dedicated\nservice account whose delegation is given onto a dedicated OU for user creation and deletion, as well as delegated\nas group manager of the target group.\n\nExample: `Invoke-AtomicTest -Session $session 'T1098' -TestNames \"Domain Account and Group Manipulate\" -InputArgs @{\"group\" = \"DNSAdmins\" }`\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "0f08226b-b6a0-40d1-b862-647a32b3ad3d",
      "type": "execute-command",
      "data": {
        "command": "$x = Get-Random -Minimum 2 -Maximum 99\n$y = Get-Random -Minimum 2 -Maximum 99\n$z = Get-Random -Minimum 2 -Maximum 99\n$w = Get-Random -Minimum 2 -Maximum 99\n\nImport-Module ActiveDirectory\n$account = \"#{account_prefix}-$x$y$z\"\nNew-ADUser -Name $account -GivenName \"Test\" -DisplayName $account -SamAccountName $account -Surname $account -Enabled:$False #{create_args}\nAdd-ADGroupMember \"#{group}\" $account\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "505418d5-2907-4113-ae25-b3bee3b6bcab",
      "type": "execute-command",
      "data": {
        "command": "Get-ADUser -LDAPFilter \"(\u0026(samaccountname=#{account_prefix}-*)(givenName=Test))\" | Remove-ADUser -Confirm:$False\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "783c3775-1179-4565-bcbb-051bafa7b4d9",
      "name": "Check dependency 1/1",
      "description": "PS Module ActiveDirectory\n",
      "type": "execute-command",
      "data": {
        "command": "Try {\n    Import-Module ActiveDirectory -ErrorAction Stop | Out-Null\n    exit 0\n} \nCatch {\n    exit 1\n}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "d8e1d572-aa61-45ab-948c-635bfb3f2c24",
      "name": "Resolve dependency 1/1",
      "description": "PS Module ActiveDirectory\n",
      "type": "execute-command",
      "data": {
        "command": "if((Get-CimInstance -ClassName Win32_OperatingSystem).ProductType -eq 1) {\n  Add-WindowsCapability -Name (Get-WindowsCapability -Name RSAT.ActiveDirectory.DS* -Online).Name -Online\n} else {\n  Install-WindowsFeature RSAT-AD-PowerShell\n}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "c93c485f-3693-410b-b778-37660081b706",
      "name": "Re-check dependency 1/1",
      "description": "PS Module ActiveDirectory\n",
      "type": "execute-command",
      "data": {
        "command": "Try {\n    Import-Module ActiveDirectory -ErrorAction Stop | Out-Null\n    exit 0\n} \nCatch {\n    exit 1\n}\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "0f08226b-b6a0-40d1-b862-647a32b3ad3d",
      "p": "on-success",
      "o": "505418d5-2907-4113-ae25-b3bee3b6bcab"
    },
    {
      "s": "0f08226b-b6a0-40d1-b862-647a32b3ad3d",
      "p": "on-failure",
      "o": "505418d5-2907-4113-ae25-b3bee3b6bcab"
    },
    {
      "s": "783c3775-1179-4565-bcbb-051bafa7b4d9",
      "p": "on-success",
      "o": "0f08226b-b6a0-40d1-b862-647a32b3ad3d"
    },
    {
      "s": "783c3775-1179-4565-bcbb-051bafa7b4d9",
      "p": "on-failure",
      "o": "d8e1d572-aa61-45ab-948c-635bfb3f2c24"
    },
    {
      "s": "d8e1d572-aa61-45ab-948c-635bfb3f2c24",
      "p": "on-success",
      "o": "c93c485f-3693-410b-b778-37660081b706"
    },
    {
      "s": "c93c485f-3693-410b-b778-37660081b706",
      "p": "on-failure",
      "o": "0f08226b-b6a0-40d1-b862-647a32b3ad3d"
    }
  ],
  "tags": [
    "T1098"
  ],
  "input_arguments": [
    {
      "name": "create_args",
      "type": "string",
      "description": "Additional string appended to New-ADUser call",
      "value": ""
    },
    {
      "name": "account_prefix",
      "type": "string",
      "description": "Prefix string of the random username (by default, atr-). Because the cleanup deletes such account based on\na match `(\u0026(samaccountname=#{account_prefix}-*)(givenName=Test))`, if you are to change it, be careful.\n",
      "value": "atr-"
    },
    {
      "name": "group",
      "type": "string",
      "description": "Name of the group to alter",
      "value": "Domain Admins"
    }
  ]
}