{
  "id": "f45df6be-2e1e-4136-a384-8f18ab3826fb",
  "name": "Decode base64 Data into Script",
  "description": "Creates a base64-encoded data file and decodes it into an executable shell script\n\nUpon successful execution, sh will execute art.sh, which is a base64 encoded command, that echoes `Hello from the Atomic Red Team` \nand uname -v\n",
  "platforms": [
    "darwin",
    "linux"
  ],
  "steps": [
    {
      "id": "4cdccc62-6796-4b01-b016-01870189b1f8",
      "type": "execute-command",
      "data": {
        "command": "if [ \"$(uname)\" = 'FreeBSD' ]; then cmd=\"b64decode -r\"; else cmd=\"base64 -d\"; fi;\ncat /tmp/encoded.dat | $cmd \u003e /tmp/art.sh\nchmod +x /tmp/art.sh\n/tmp/art.sh\n",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "f1abf759-291c-404e-b319-2ee95727b7fc",
      "type": "execute-command",
      "data": {
        "command": "rm /tmp/encoded.dat \nrm /tmp/art.sh\n",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "03f81041-3fca-4137-be49-17ea58d96ad4",
      "name": "Check dependency 1/1",
      "description": "encode the command into base64 file\n",
      "type": "execute-command",
      "data": {
        "command": "if [ -e \"/tmp/encoded.dat\" ]; then exit 0; else exit 1; fi\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "5ca95ca7-5352-43b7-b848-3d4692fea8c6",
      "name": "Resolve dependency 1/1",
      "description": "encode the command into base64 file\n",
      "type": "execute-command",
      "data": {
        "command": "if [ \"$(uname)\" = 'FreeBSD' ]; then cmd=\"b64encode -r -\"; else cmd=\"base64\"; fi;\necho \"#{shell_command}\" | $cmd \u003e /tmp/encoded.dat\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "e6f3da5f-d8f3-4d59-b0ec-3d28ef6968b8",
      "name": "Re-check dependency 1/1",
      "description": "encode the command into base64 file\n",
      "type": "execute-command",
      "data": {
        "command": "if [ -e \"/tmp/encoded.dat\" ]; then exit 0; else exit 1; fi\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "4cdccc62-6796-4b01-b016-01870189b1f8",
      "p": "on-success",
      "o": "f1abf759-291c-404e-b319-2ee95727b7fc"
    },
    {
      "s": "4cdccc62-6796-4b01-b016-01870189b1f8",
      "p": "on-failure",
      "o": "f1abf759-291c-404e-b319-2ee95727b7fc"
    },
    {
      "s": "03f81041-3fca-4137-be49-17ea58d96ad4",
      "p": "on-success",
      "o": "4cdccc62-6796-4b01-b016-01870189b1f8"
    },
    {
      "s": "03f81041-3fca-4137-be49-17ea58d96ad4",
      "p": "on-failure",
      "o": "5ca95ca7-5352-43b7-b848-3d4692fea8c6"
    },
    {
      "s": "5ca95ca7-5352-43b7-b848-3d4692fea8c6",
      "p": "on-success",
      "o": "e6f3da5f-d8f3-4d59-b0ec-3d28ef6968b8"
    },
    {
      "s": "e6f3da5f-d8f3-4d59-b0ec-3d28ef6968b8",
      "p": "on-failure",
      "o": "4cdccc62-6796-4b01-b016-01870189b1f8"
    }
  ],
  "tags": [
    "T1027",
    "atomic-red-team"
  ],
  "input_arguments": [
    {
      "name": "shell_command",
      "type": "string",
      "description": "command to encode",
      "value": "echo Hello from the Atomic Red Team \u0026\u0026 uname -v"
    }
  ]
}