{
  "id": "f45df6be-2e1e-4136-a384-8f18ab3826fb",
  "name": "Decode base64 Data into Script",
  "description": "Creates a base64-encoded data file and decodes it into an executable shell script\n\nUpon successful execution, sh will execute art.sh, which is a base64 encoded command, that echoes `Hello from the Atomic Red Team` \nand uname -v\n",
  "platforms": [
    "darwin",
    "linux"
  ],
  "steps": [
    {
      "id": "5742ae21-8a28-4a51-bdcb-e5a8bd2b8218",
      "type": "execute-command",
      "data": {
        "command": "if [ \"$(uname)\" = 'FreeBSD' ]; then cmd=\"b64decode -r\"; else cmd=\"base64 -d\"; fi;\ncat /tmp/encoded.dat | $cmd \u003e /tmp/art.sh\nchmod +x /tmp/art.sh\n/tmp/art.sh",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "0c6dc205-20d8-4f8a-817e-ab780b9db7ce",
      "type": "execute-command",
      "data": {
        "command": "rm /tmp/encoded.dat \nrm /tmp/art.sh",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "0410d4f9-3482-443a-bd06-54a5f619c9a7",
      "name": "Check dependency 1/1",
      "description": "encode the command into base64 file\n",
      "type": "execute-command",
      "data": {
        "command": "if [ -e \"/tmp/encoded.dat\" ]; then exit 0; else exit 1; fi",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "c466d31a-3f03-44fc-a522-2426a42bb86c",
      "name": "Resolve dependency 1/1",
      "description": "encode the command into base64 file\n",
      "type": "execute-command",
      "data": {
        "command": "if [ \"$(uname)\" = 'FreeBSD' ]; then cmd=\"b64encode -r -\"; else cmd=\"base64\"; fi;\necho \"#{shell_command}\" | $cmd \u003e /tmp/encoded.dat",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "a9e1d1a1-2d87-462d-86f6-e2dcd0b73553",
      "name": "Re-check dependency 1/1",
      "description": "encode the command into base64 file\n",
      "type": "execute-command",
      "data": {
        "command": "if [ -e \"/tmp/encoded.dat\" ]; then exit 0; else exit 1; fi",
        "command_type": "sh"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "5742ae21-8a28-4a51-bdcb-e5a8bd2b8218",
      "p": "on-success",
      "o": "0c6dc205-20d8-4f8a-817e-ab780b9db7ce"
    },
    {
      "s": "5742ae21-8a28-4a51-bdcb-e5a8bd2b8218",
      "p": "on-failure",
      "o": "0c6dc205-20d8-4f8a-817e-ab780b9db7ce"
    },
    {
      "s": "0410d4f9-3482-443a-bd06-54a5f619c9a7",
      "p": "on-success",
      "o": "5742ae21-8a28-4a51-bdcb-e5a8bd2b8218"
    },
    {
      "s": "0410d4f9-3482-443a-bd06-54a5f619c9a7",
      "p": "on-failure",
      "o": "c466d31a-3f03-44fc-a522-2426a42bb86c"
    },
    {
      "s": "c466d31a-3f03-44fc-a522-2426a42bb86c",
      "p": "on-success",
      "o": "a9e1d1a1-2d87-462d-86f6-e2dcd0b73553"
    },
    {
      "s": "a9e1d1a1-2d87-462d-86f6-e2dcd0b73553",
      "p": "on-failure",
      "o": "5742ae21-8a28-4a51-bdcb-e5a8bd2b8218"
    }
  ],
  "tags": [
    "T1027"
  ],
  "input_arguments": [
    {
      "name": "shell_command",
      "type": "string",
      "description": "command to encode",
      "value": "echo Hello from the Atomic Red Team \u0026\u0026 uname -v"
    }
  ]
}