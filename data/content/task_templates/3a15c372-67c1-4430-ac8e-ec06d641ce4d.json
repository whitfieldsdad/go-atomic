{
  "id": "3a15c372-67c1-4430-ac8e-ec06d641ce4d",
  "name": "Linux Base64 Encoded Shebang in CLI",
  "description": "Using Linux Base64 Encoded shell scripts that have Shebang in them. This is commonly how attackers obfuscate passing and executing a shell script. Seen [here](https://www.trendmicro.com/pl_pl/research/20/i/the-evolution-of-malicious-shell-scripts.html) by TrendMicro, as well as [LinPEAS](https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS). Also a there is a great Sigma rule [here](https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_base64_shebang_cli.yml) for it. \n",
  "platforms": [
    "linux",
    "darwin"
  ],
  "steps": [
    {
      "id": "b912ef8f-f9cd-4da6-b943-24f8baad7774",
      "type": "execute-command",
      "data": {
        "command": "echo #{bash_encoded} | base64 -d | bash\necho #{dash_encoded} | base64 -d | bash\necho #{fish_encoded} | base64 -d | bash\necho #{sh_encoded} | base64 -d | bash",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "be67922f-7497-4f76-9979-ff4a6702cf67",
      "name": "Check dependency 1/1",
      "description": "base64 must be present\n",
      "type": "execute-command",
      "data": {
        "command": "which base64",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "574ae47a-6963-4031-a018-8600d5393a55",
      "name": "Resolve dependency 1/1",
      "description": "base64 must be present\n",
      "type": "execute-command",
      "data": {
        "command": "echo \"please install base64\"",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "b7c8d36e-dca4-4b43-8fa1-d9f2c42d1889",
      "name": "Re-check dependency 1/1",
      "description": "base64 must be present\n",
      "type": "execute-command",
      "data": {
        "command": "which base64",
        "command_type": "sh"
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "be67922f-7497-4f76-9979-ff4a6702cf67",
      "p": "on-success",
      "o": "b912ef8f-f9cd-4da6-b943-24f8baad7774"
    },
    {
      "s": "be67922f-7497-4f76-9979-ff4a6702cf67",
      "p": "on-failure",
      "o": "574ae47a-6963-4031-a018-8600d5393a55"
    },
    {
      "s": "574ae47a-6963-4031-a018-8600d5393a55",
      "p": "on-success",
      "o": "b7c8d36e-dca4-4b43-8fa1-d9f2c42d1889"
    },
    {
      "s": "b7c8d36e-dca4-4b43-8fa1-d9f2c42d1889",
      "p": "on-failure",
      "o": "b912ef8f-f9cd-4da6-b943-24f8baad7774"
    }
  ],
  "tags": [
    "T1140"
  ],
  "input_arguments": [
    {
      "name": "fish_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    },
    {
      "name": "sh_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL3NoCmVjaG8gImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL0BhdG9taWNzb25hZnJpZGF5IEZUVyIK"
    },
    {
      "name": "bash_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Jhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    },
    {
      "name": "dash_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    }
  ]
}