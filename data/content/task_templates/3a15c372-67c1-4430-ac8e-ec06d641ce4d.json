{
  "id": "3a15c372-67c1-4430-ac8e-ec06d641ce4d",
  "name": "Linux Base64 Encoded Shebang in CLI",
  "description": "Using Linux Base64 Encoded shell scripts that have Shebang in them. This is commonly how attackers obfuscate passing and executing a shell script. Seen [here](https://www.trendmicro.com/pl_pl/research/20/i/the-evolution-of-malicious-shell-scripts.html) by TrendMicro, as well as [LinPEAS](https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS). Also a there is a great Sigma rule [here](https://github.com/SigmaHQ/sigma/blob/master/rules/linux/process_creation/proc_creation_lnx_base64_shebang_cli.yml) for it. \n",
  "platforms": [
    "linux",
    "darwin"
  ],
  "steps": [
    {
      "id": "418e3260-0e56-4c99-ab53-f93cbb182387",
      "type": "execute-command",
      "data": {
        "command": "echo #{bash_encoded} | base64 -d | bash\necho #{dash_encoded} | base64 -d | bash\necho #{fish_encoded} | base64 -d | bash\necho #{sh_encoded} | base64 -d | bash\n",
        "command_type": "sh"
      },
      "elevation_required": false
    },
    {
      "id": "e69f8159-5a39-49eb-b8c5-3e73b1392496",
      "name": "Check dependency 1/1",
      "description": "base64 must be present\n",
      "type": "execute-command",
      "data": {
        "command": "which base64\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "52319880-6f50-454c-864c-20e233ea246e",
      "name": "Resolve dependency 1/1",
      "description": "base64 must be present\n",
      "type": "execute-command",
      "data": {
        "command": "echo \"please install base64\"\n",
        "command_type": ""
      },
      "elevation_required": false
    },
    {
      "id": "5b9d0fd1-478e-4651-bda3-616d91d39029",
      "name": "Re-check dependency 1/1",
      "description": "base64 must be present\n",
      "type": "execute-command",
      "data": {
        "command": "which base64\n",
        "command_type": ""
      },
      "elevation_required": false
    }
  ],
  "flows": [
    {
      "s": "e69f8159-5a39-49eb-b8c5-3e73b1392496",
      "p": "on-success",
      "o": "418e3260-0e56-4c99-ab53-f93cbb182387"
    },
    {
      "s": "e69f8159-5a39-49eb-b8c5-3e73b1392496",
      "p": "on-failure",
      "o": "52319880-6f50-454c-864c-20e233ea246e"
    },
    {
      "s": "52319880-6f50-454c-864c-20e233ea246e",
      "p": "on-success",
      "o": "5b9d0fd1-478e-4651-bda3-616d91d39029"
    },
    {
      "s": "5b9d0fd1-478e-4651-bda3-616d91d39029",
      "p": "on-failure",
      "o": "418e3260-0e56-4c99-ab53-f93cbb182387"
    }
  ],
  "tags": [
    "T1140"
  ],
  "input_arguments": [
    {
      "name": "bash_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Jhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    },
    {
      "name": "dash_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    },
    {
      "name": "fish_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL2Rhc2gKZWNobyAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vQGF0b21pY3NvbmFmcmlkYXkgRlRXIgo="
    },
    {
      "name": "sh_encoded",
      "type": "string",
      "description": "Encoded",
      "value": "IyEvYmluL3NoCmVjaG8gImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL0BhdG9taWNzb25hZnJpZGF5IEZUVyIK"
    }
  ]
}